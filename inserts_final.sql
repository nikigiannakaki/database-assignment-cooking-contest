-- --------------------------------------------------------
-- Διακομιστής:                  127.0.0.1
-- Έκδοση διακομιστή:            11.4.0-MariaDB - mariadb.org binary distribution
-- Λειτ. σύστημα διακομιστή:     Win64
-- HeidiSQL Έκδοση:              12.3.0.6589
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- Dumping database structure for cooking
CREATE DATABASE IF NOT EXISTS `cooking1` /*!40100 DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci */;
USE `cooking1`;

-- Dumping structure for πίνακας cooking.contestant
CREATE TABLE IF NOT EXISTS `contestant` (
  `contestant_id` int(11) NOT NULL AUTO_INCREMENT,
  `episode_id` int(11) NOT NULL,
  `cook_id` int(11) NOT NULL,
  `recipe_name` varchar(50) NOT NULL,
  `national_cuisine` varchar(30) NOT NULL,
  PRIMARY KEY (`contestant_id`),
  KEY `episode_fk2` (`episode_id`),
  KEY `cook_fk4` (`cook_id`),
  KEY `recipe_fk5` (`recipe_name`),
  KEY `national_cuisine_fk1` (`national_cuisine`),
  CONSTRAINT `cook_fk4` FOREIGN KEY (`cook_id`) REFERENCES `cook` (`cook_id`),
  CONSTRAINT `episode_fk2` FOREIGN KEY (`episode_id`) REFERENCES `episodes` (`episode_id`),
  CONSTRAINT `national_cuisine_fk1` FOREIGN KEY (`national_cuisine`) REFERENCES `national_cuisine` (`cuisine_name`),
  CONSTRAINT `recipe_fk5` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.contestant: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.cook
CREATE TABLE IF NOT EXISTS `cook` (
  `cook_id` int(11) NOT NULL AUTO_INCREMENT,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(30) NOT NULL,
  `cook_phone_number` varchar(10) NOT NULL,
  `cook_birthday` date NOT NULL,
  `age_in_years` int(11) NOT NULL,
  `cook_working_years` int(11) NOT NULL,
  `professional_level` enum('C cook','B cook','A cook','chef assistant','chef') NOT NULL,
  PRIMARY KEY (`cook_id`),
  CONSTRAINT `phone_number` CHECK (octet_length(`cook_phone_number`) = 10 and `cook_phone_number` regexp '^[0-9]+$')
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.cook: ~50 rows (approximately)
INSERT INTO `cook` (`cook_id`, `first_name`, `last_name`, `cook_phone_number`, `cook_birthday`, `age_in_years`, `cook_working_years`, `professional_level`) VALUES
	(1cookingcctest1, 'Melissa', 'Alexander', '9165571632', '1990-02-03', 34, 15, 'chef assistant'),
	(2, 'William', 'Greene', '4232223724', '1959-04-08', 65, 6, 'chef assistant'),
	(3, 'Thomas', 'Owens', '3776424622', '1976-06-04', 48, 6, 'chef assistant'),
	(4, 'Robert', 'Harris', '9406791242', '1947-05-03', 77, 7, 'chef'),
	(5, 'Alexander', 'Johnson', '1637407368', '1954-03-07', 70, 21, 'A cook'),
	(6, 'Kimberly', 'Robinson', '2155249667', '1994-06-19', 30, 10, 'B cook'),
	(7, 'James', 'Holmes', '2497632345', '1949-02-26', 75, 1, 'B cook'),
	(8, 'Kimberly', 'Smith', '7170867995', '1983-05-01', 41, 1, 'B cook'),
	(9, 'Diane', 'Mccullough', '4205901807', '1992-11-05', 32, 11, 'B cook'),
	(10, 'Rachel', 'Richards', '2611547782', '1970-11-09', 54, 10, 'chef'),
	(11, 'Sally', 'Jones', '4129756506', '1972-05-06', 52, 33, 'C cook'),
	(12, 'Sandra', 'Serrano', '6725458452', '1961-03-16', 63, 22, 'A cook'),
	(13, 'Dustin', 'Hawkins', '5178141119', '2004-04-26', 20, 2, 'chef'),
	(14, 'Anthony', 'Luna', '9924657738', '1973-09-04', 51, 26, 'C cook'),
	(15, 'James', 'Flores', '7102943406', '1978-02-23', 46, 15, 'chef assistant'),
	(16, 'Chad', 'Hernandez', '5175126772', '2004-05-14', 20, 2, 'chef'),
	(17, 'Jessica', 'Bush', '1136527182', '1953-12-06', 71, 4, 'C cook'),
	(18, 'Donald', 'Lopez', '2599403387', '1999-09-26', 25, 1, 'B cook'),
	(19, 'Warren', 'Herrera', '4931105499', '1956-09-19', 68, 17, 'C cook'),
	(20, 'Jeffrey', 'Jones', '9934988457', '1948-12-26', 76, 51, 'chef assistant'),
	(21, 'Phillip', 'Contreras', '4104868952', '1989-06-20', 35, 11, 'chef'),
	(22, 'Leonard', 'Valenzuela', '5177460611', '1995-09-06', 29, 11, 'A cook'),
	(23, 'Hannah', 'Hodges', '5476138282', '1982-09-11', 42, 1, 'A cook'),
	(24, 'William', 'Park', '5906030133', '1983-01-21', 41, 2, 'C cook'),
	(25, 'Kenneth', 'Clark', '7530014514', '1998-10-11', 26, 4, 'B cook'),
	(26, 'Kristi', 'West', '7237709386', '1991-04-25', 33, 14, 'C cook'),
	(27, 'Michael', 'Wilson', '2327790254', '1950-03-25', 74, 48, 'B cook'),
	(28, 'Danielle', 'Harrison', '7088972766', '1979-11-18', 45, 15, 'C cook'),
	(29, 'Sarah', 'Hayes', '5250725920', '1971-09-20', 53, 20, 'A cook'),
	(30, 'Katherine', 'Chavez', '7160700188', '1986-03-03', 38, 3, 'chef assistant'),
	(31, 'Mary', 'Williams', '2023651461', '2002-09-07', 22, 4, 'A cook'),
	(32, 'Michael', 'Mueller', '8881261636', '1965-10-25', 59, 14, 'chef assistant'),
	(33, 'Robert', 'Mitchell', '9040569240', '1946-05-28', 78, 49, 'B cook'),
	(34, 'Brittany', 'Baker', '7363230086', '2001-02-11', 23, 1, 'chef assistant'),
	(35, 'Ashley', 'Schultz', '5836300510', '2004-07-08', 20, 2, 'chef assistant'),
	(36, 'Carla', 'Atkinson', '9796729819', '1992-08-24', 32, 1, 'chef'),
	(37, 'Jasmine', 'Garcia', '8877607579', '2006-10-23', 18, 1, 'A cook'),
	(38, 'Madison', 'Smith', '1083239923', '1994-12-22', 30, 4, 'A cook'),
	(39, 'Larry', 'Glover', '7621269707', '1951-08-26', 73, 44, 'chef'),
	(40, 'Jennifer', 'Lopez', '8538908109', '1985-12-14', 39, 21, 'chef'),
	(41, 'Daniel', 'Nguyen', '0867955895', '1980-03-05', 44, 10, 'chef'),
	(42, 'Theresa', 'Garcia', '7135958585', '1990-11-17', 34, 7, 'chef assistant'),
	(43, 'David', 'Bradley', '6293910505', '1969-05-12', 55, 27, 'B cook'),
	(44, 'Wesley', 'Myers', '4146759442', '1965-10-05', 59, 32, 'C cook'),
	(45, 'Nicole', 'Dawson', '3597644617', '2002-03-28', 22, 3, 'chef'),
	(46, 'Timothy', 'Williams', '4979120087', '1994-02-09', 30, 8, 'A cook'),
	(47, 'Eric', 'Rivera', '6960568289', '1980-05-19', 44, 5, 'chef'),
	(48, 'Ivan', 'Grant', '9204376440', '1990-07-23', 34, 4, 'chef'),
	(49, 'Jessica', 'Wilson', '0924097879', '1979-02-19', 45, 15, 'C cook'),
	(50, 'Nathan', 'Griffin', '1584724539', '1948-01-03', 76, 20, 'A cook');

-- Dumping structure for πίνακας cooking.cook_cuisine
CREATE TABLE IF NOT EXISTS `cook_cuisine` (
  `cook_id` int(11) NOT NULL,
  `cuisine_name` varchar(30) NOT NULL,
  PRIMARY KEY (`cook_id`,`cuisine_name`),
  KEY `cook_cuisine_cuisine` (`cuisine_name`),
  CONSTRAINT `cook_cuisine_cook` FOREIGN KEY (`cook_id`) REFERENCES `cook` (`cook_id`),
  CONSTRAINT `cook_cuisine_cuisine` FOREIGN KEY (`cuisine_name`) REFERENCES `national_cuisine` (`cuisine_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.cook_cuisine: ~451 rows (approximately)
INSERT INTO `cook_cuisine` (`cook_id`, `cuisine_name`) VALUES
	(1, 'American'),
	(3, 'American'),
	(5, 'American'),
	(9, 'American'),
	(10, 'American'),
	(11, 'American'),
	(12, 'American'),
	(13, 'American'),
	(14, 'American'),
	(18, 'American'),
	(20, 'American'),
	(24, 'American'),
	(25, 'American'),
	(26, 'American'),
	(27, 'American'),
	(30, 'American'),
	(32, 'American'),
	(35, 'American'),
	(36, 'American'),
	(38, 'American'),
	(39, 'American'),
	(42, 'American'),
	(49, 'American'),
	(1, 'Brazilian'),
	(7, 'Brazilian'),
	(10, 'Brazilian'),
	(11, 'Brazilian'),
	(13, 'Brazilian'),
	(14, 'Brazilian'),
	(17, 'Brazilian'),
	(18, 'Brazilian'),
	(20, 'Brazilian'),
	(23, 'Brazilian'),
	(24, 'Brazilian'),
	(30, 'Brazilian'),
	(32, 'Brazilian'),
	(35, 'Brazilian'),
	(36, 'Brazilian'),
	(38, 'Brazilian'),
	(41, 'Brazilian'),
	(42, 'Brazilian'),
	(43, 'Brazilian'),
	(50, 'Brazilian'),
	(1, 'Chinese'),
	(3, 'Chinese'),
	(8, 'Chinese'),
	(9, 'Chinese'),
	(10, 'Chinese'),
	(11, 'Chinese'),
	(12, 'Chinese'),
	(13, 'Chinese'),
	(18, 'Chinese'),
	(22, 'Chinese'),
	(23, 'Chinese'),
	(26, 'Chinese'),
	(27, 'Chinese'),
	(30, 'Chinese'),
	(32, 'Chinese'),
	(33, 'Chinese'),
	(34, 'Chinese'),
	(35, 'Chinese'),
	(36, 'Chinese'),
	(38, 'Chinese'),
	(39, 'Chinese'),
	(41, 'Chinese'),
	(42, 'Chinese'),
	(49, 'Chinese'),
	(50, 'Chinese'),
	(3, 'Ethiopian'),
	(5, 'Ethiopian'),
	(9, 'Ethiopian'),
	(10, 'Ethiopian'),
	(11, 'Ethiopian'),
	(13, 'Ethiopian'),
	(14, 'Ethiopian'),
	(15, 'Ethiopian'),
	(20, 'Ethiopian'),
	(22, 'Ethiopian'),
	(23, 'Ethiopian'),
	(25, 'Ethiopian'),
	(26, 'Ethiopian'),
	(27, 'Ethiopian'),
	(29, 'Ethiopian'),
	(30, 'Ethiopian'),
	(32, 'Ethiopian'),
	(34, 'Ethiopian'),
	(35, 'Ethiopian'),
	(41, 'Ethiopian'),
	(42, 'Ethiopian'),
	(43, 'Ethiopian'),
	(45, 'Ethiopian'),
	(46, 'Ethiopian'),
	(47, 'Ethiopian'),
	(49, 'Ethiopian'),
	(50, 'Ethiopian'),
	(3, 'French'),
	(6, 'French'),
	(10, 'French'),
	(11, 'French'),
	(12, 'French'),
	(13, 'French'),
	(14, 'French'),
	(17, 'French'),
	(18, 'French'),
	(20, 'French'),
	(23, 'French'),
	(24, 'French'),
	(26, 'French'),
	(27, 'French'),
	(30, 'French'),
	(32, 'French'),
	(33, 'French'),
	(34, 'French'),
	(35, 'French'),
	(37, 'French'),
	(41, 'French'),
	(42, 'French'),
	(45, 'French'),
	(49, 'French'),
	(3, 'Greek'),
	(10, 'Greek'),
	(11, 'Greek'),
	(14, 'Greek'),
	(18, 'Greek'),
	(22, 'Greek'),
	(23, 'Greek'),
	(24, 'Greek'),
	(26, 'Greek'),
	(27, 'Greek'),
	(28, 'Greek'),
	(30, 'Greek'),
	(32, 'Greek'),
	(34, 'Greek'),
	(35, 'Greek'),
	(36, 'Greek'),
	(40, 'Greek'),
	(41, 'Greek'),
	(42, 'Greek'),
	(47, 'Greek'),
	(49, 'Greek'),
	(1, 'Indian'),
	(4, 'Indian'),
	(9, 'Indian'),
	(10, 'Indian'),
	(11, 'Indian'),
	(13, 'Indian'),
	(14, 'Indian'),
	(15, 'Indian'),
	(18, 'Indian'),
	(20, 'Indian'),
	(21, 'Indian'),
	(22, 'Indian'),
	(23, 'Indian'),
	(25, 'Indian'),
	(26, 'Indian'),
	(27, 'Indian'),
	(30, 'Indian'),
	(32, 'Indian'),
	(33, 'Indian'),
	(35, 'Indian'),
	(36, 'Indian'),
	(38, 'Indian'),
	(41, 'Indian'),
	(42, 'Indian'),
	(43, 'Indian'),
	(47, 'Indian'),
	(48, 'Indian'),
	(49, 'Indian'),
	(50, 'Indian'),
	(1, 'Israeli'),
	(10, 'Israeli'),
	(11, 'Israeli'),
	(13, 'Israeli'),
	(15, 'Israeli'),
	(17, 'Israeli'),
	(18, 'Israeli'),
	(20, 'Israeli'),
	(23, 'Israeli'),
	(24, 'Israeli'),
	(25, 'Israeli'),
	(26, 'Israeli'),
	(27, 'Israeli'),
	(30, 'Israeli'),
	(32, 'Israeli'),
	(35, 'Israeli'),
	(36, 'Israeli'),
	(38, 'Israeli'),
	(41, 'Israeli'),
	(42, 'Israeli'),
	(43, 'Israeli'),
	(44, 'Israeli'),
	(47, 'Israeli'),
	(49, 'Israeli'),
	(1, 'Italian'),
	(5, 'Italian'),
	(8, 'Italian'),
	(9, 'Italian'),
	(10, 'Italian'),
	(11, 'Italian'),
	(13, 'Italian'),
	(14, 'Italian'),
	(15, 'Italian'),
	(16, 'Italian'),
	(17, 'Italian'),
	(18, 'Italian'),
	(20, 'Italian'),
	(23, 'Italian'),
	(24, 'Italian'),
	(26, 'Italian'),
	(30, 'Italian'),
	(31, 'Italian'),
	(33, 'Italian'),
	(34, 'Italian'),
	(35, 'Italian'),
	(38, 'Italian'),
	(41, 'Italian'),
	(42, 'Italian'),
	(44, 'Italian'),
	(47, 'Italian'),
	(49, 'Italian'),
	(50, 'Italian'),
	(1, 'Japanese'),
	(3, 'Japanese'),
	(10, 'Japanese'),
	(11, 'Japanese'),
	(13, 'Japanese'),
	(14, 'Japanese'),
	(18, 'Japanese'),
	(19, 'Japanese'),
	(20, 'Japanese'),
	(22, 'Japanese'),
	(23, 'Japanese'),
	(24, 'Japanese'),
	(25, 'Japanese'),
	(26, 'Japanese'),
	(27, 'Japanese'),
	(30, 'Japanese'),
	(32, 'Japanese'),
	(33, 'Japanese'),
	(34, 'Japanese'),
	(35, 'Japanese'),
	(38, 'Japanese'),
	(40, 'Japanese'),
	(41, 'Japanese'),
	(42, 'Japanese'),
	(43, 'Japanese'),
	(45, 'Japanese'),
	(49, 'Japanese'),
	(50, 'Japanese'),
	(1, 'Korean'),
	(7, 'Korean'),
	(9, 'Korean'),
	(10, 'Korean'),
	(11, 'Korean'),
	(13, 'Korean'),
	(14, 'Korean'),
	(15, 'Korean'),
	(17, 'Korean'),
	(18, 'Korean'),
	(22, 'Korean'),
	(23, 'Korean'),
	(24, 'Korean'),
	(25, 'Korean'),
	(26, 'Korean'),
	(27, 'Korean'),
	(28, 'Korean'),
	(30, 'Korean'),
	(32, 'Korean'),
	(34, 'Korean'),
	(35, 'Korean'),
	(36, 'Korean'),
	(38, 'Korean'),
	(41, 'Korean'),
	(42, 'Korean'),
	(43, 'Korean'),
	(46, 'Korean'),
	(47, 'Korean'),
	(1, 'Latin American'),
	(3, 'Latin American'),
	(9, 'Latin American'),
	(10, 'Latin American'),
	(11, 'Latin American'),
	(13, 'Latin American'),
	(15, 'Latin American'),
	(18, 'Latin American'),
	(20, 'Latin American'),
	(22, 'Latin American'),
	(23, 'Latin American'),
	(24, 'Latin American'),
	(25, 'Latin American'),
	(26, 'Latin American'),
	(27, 'Latin American'),
	(30, 'Latin American'),
	(32, 'Latin American'),
	(33, 'Latin American'),
	(35, 'Latin American'),
	(36, 'Latin American'),
	(40, 'Latin American'),
	(41, 'Latin American'),
	(42, 'Latin American'),
	(43, 'Latin American'),
	(49, 'Latin American'),
	(50, 'Latin American'),
	(10, 'Lebanese'),
	(11, 'Lebanese'),
	(12, 'Lebanese'),
	(13, 'Lebanese'),
	(14, 'Lebanese'),
	(15, 'Lebanese'),
	(17, 'Lebanese'),
	(18, 'Lebanese'),
	(20, 'Lebanese'),
	(22, 'Lebanese'),
	(23, 'Lebanese'),
	(26, 'Lebanese'),
	(27, 'Lebanese'),
	(31, 'Lebanese'),
	(32, 'Lebanese'),
	(33, 'Lebanese'),
	(34, 'Lebanese'),
	(35, 'Lebanese'),
	(41, 'Lebanese'),
	(42, 'Lebanese'),
	(43, 'Lebanese'),
	(45, 'Lebanese'),
	(46, 'Lebanese'),
	(49, 'Lebanese'),
	(50, 'Lebanese'),
	(1, 'Mexican'),
	(9, 'Mexican'),
	(10, 'Mexican'),
	(11, 'Mexican'),
	(12, 'Mexican'),
	(13, 'Mexican'),
	(14, 'Mexican'),
	(18, 'Mexican'),
	(22, 'Mexican'),
	(24, 'Mexican'),
	(26, 'Mexican'),
	(27, 'Mexican'),
	(30, 'Mexican'),
	(33, 'Mexican'),
	(34, 'Mexican'),
	(35, 'Mexican'),
	(36, 'Mexican'),
	(38, 'Mexican'),
	(40, 'Mexican'),
	(41, 'Mexican'),
	(42, 'Mexican'),
	(43, 'Mexican'),
	(44, 'Mexican'),
	(46, 'Mexican'),
	(47, 'Mexican'),
	(49, 'Mexican'),
	(1, 'Moroccan'),
	(3, 'Moroccan'),
	(4, 'Moroccan'),
	(8, 'Moroccan'),
	(10, 'Moroccan'),
	(11, 'Moroccan'),
	(12, 'Moroccan'),
	(15, 'Moroccan'),
	(18, 'Moroccan'),
	(20, 'Moroccan'),
	(23, 'Moroccan'),
	(25, 'Moroccan'),
	(26, 'Moroccan'),
	(27, 'Moroccan'),
	(30, 'Moroccan'),
	(33, 'Moroccan'),
	(35, 'Moroccan'),
	(36, 'Moroccan'),
	(38, 'Moroccan'),
	(46, 'Moroccan'),
	(47, 'Moroccan'),
	(49, 'Moroccan'),
	(50, 'Moroccan'),
	(1, 'Spanish'),
	(3, 'Spanish'),
	(6, 'Spanish'),
	(9, 'Spanish'),
	(10, 'Spanish'),
	(11, 'Spanish'),
	(13, 'Spanish'),
	(15, 'Spanish'),
	(18, 'Spanish'),
	(22, 'Spanish'),
	(23, 'Spanish'),
	(24, 'Spanish'),
	(26, 'Spanish'),
	(30, 'Spanish'),
	(32, 'Spanish'),
	(35, 'Spanish'),
	(40, 'Spanish'),
	(42, 'Spanish'),
	(43, 'Spanish'),
	(44, 'Spanish'),
	(46, 'Spanish'),
	(47, 'Spanish'),
	(48, 'Spanish'),
	(49, 'Spanish'),
	(1, 'Thai'),
	(10, 'Thai'),
	(11, 'Thai'),
	(12, 'Thai'),
	(13, 'Thai'),
	(15, 'Thai'),
	(16, 'Thai'),
	(18, 'Thai'),
	(22, 'Thai'),
	(23, 'Thai'),
	(24, 'Thai'),
	(26, 'Thai'),
	(27, 'Thai'),
	(30, 'Thai'),
	(33, 'Thai'),
	(34, 'Thai'),
	(35, 'Thai'),
	(38, 'Thai'),
	(41, 'Thai'),
	(42, 'Thai'),
	(46, 'Thai'),
	(47, 'Thai'),
	(50, 'Thai'),
	(1, 'Vietnamese'),
	(2, 'Vietnamese'),
	(7, 'Vietnamese'),
	(8, 'Vietnamese'),
	(10, 'Vietnamese'),
	(11, 'Vietnamese'),
	(13, 'Vietnamese'),
	(14, 'Vietnamese'),
	(15, 'Vietnamese'),
	(16, 'Vietnamese'),
	(17, 'Vietnamese'),
	(18, 'Vietnamese'),
	(20, 'Vietnamese'),
	(23, 'Vietnamese'),
	(24, 'Vietnamese'),
	(26, 'Vietnamese'),
	(27, 'Vietnamese'),
	(31, 'Vietnamese'),
	(34, 'Vietnamese'),
	(35, 'Vietnamese'),
	(38, 'Vietnamese'),
	(41, 'Vietnamese'),
	(42, 'Vietnamese'),
	(43, 'Vietnamese'),
	(47, 'Vietnamese'),
	(49, 'Vietnamese'),
	(50, 'Vietnamese');

-- Dumping structure for πίνακας cooking.cuisine_recipe
CREATE TABLE IF NOT EXISTS `cuisine_recipe` (
  `recipe_name` varchar(50) NOT NULL,
  `cuisine_name` varchar(30) NOT NULL,
  PRIMARY KEY (`recipe_name`,`cuisine_name`),
  KEY `cuisine_recipes_cuisine` (`cuisine_name`),
  CONSTRAINT `cuisine_recipes_cuisine` FOREIGN KEY (`cuisine_name`) REFERENCES `national_cuisine` (`cuisine_name`),
  CONSTRAINT `cuisine_recipes_recipes` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.cuisine_recipe: ~70 rows (approximately)
INSERT INTO `cuisine_recipe` (`recipe_name`, `cuisine_name`) VALUES
	('Apple Pie', 'American'),
	('BBQ Ribs', 'American'),
	('Beef Stew', 'American'),
	('Brigadeiro', 'Brazilian'),
	('Feijoada', 'Brazilian'),
	('Pão de Queijo', 'Brazilian'),
	('Hot and Sour Soup', 'Chinese'),
	('Kung Pao Chicken', 'Chinese'),
	('Kung Pao Shrimp', 'Chinese'),
	('Mapo Tofu', 'Chinese'),
	('Peking Duck', 'Chinese'),
	('Doro Wat', 'Ethiopian'),
	('Injera', 'Ethiopian'),
	('Kitfo', 'Ethiopian'),
	('Beef Bourguignon', 'French'),
	('Carbonnade Flamande', 'French'),
	('Coq au Vin', 'French'),
	('Crepes Suzette', 'French'),
	('Ratatouille', 'French'),
	('Dolmades', 'Greek'),
	('Greek Salad', 'Greek'),
	('Moussaka', 'Greek'),
	('Spanakopita', 'Greek'),
	('Butter Chicken', 'Indian'),
	('Chicken Biryani', 'Indian'),
	('Chicken Korma', 'Indian'),
	('Chicken Tikka Masala', 'Indian'),
	('Palak Paneer', 'Indian'),
	('Paneer Tikka', 'Indian'),
	('Tofu Curry', 'Indian'),
	('Shakshuka', 'Israeli'),
	('Caprese Pizza', 'Italian'),
	('Eggplant Parmesan', 'Italian'),
	('Lasagna', 'Italian'),
	('Margherita Pizza', 'Italian'),
	('Osso Buco', 'Italian'),
	('Pasta Primavera', 'Italian'),
	('Spaghetti Carbonara', 'Italian'),
	('Tiramisu', 'Italian'),
	('Gyoza', 'Japanese'),
	('Miso Soup', 'Japanese'),
	('Sashimi', 'Japanese'),
	('Sushi Rolls', 'Japanese'),
	('Tempura', 'Japanese'),
	('Tempura Vegetables', 'Japanese'),
	('Bibimbap', 'Korean'),
	('Bulgogi', 'Korean'),
	('Kimchi', 'Korean'),
	('Ceviche', 'Latin American'),
	('Falafel', 'Lebanese'),
	('Fattoush', 'Lebanese'),
	('Hummus', 'Lebanese'),
	('Tabbouleh', 'Lebanese'),
	('Chilaquiles', 'Mexican'),
	('Chiles en Nogada', 'Mexican'),
	('Enchiladas', 'Mexican'),
	('Guacamole', 'Mexican'),
	('Tacos al Pastor', 'Mexican'),
	('Lamb Tagine', 'Moroccan'),
	('Gazpacho', 'Spanish'),
	('Paella', 'Spanish'),
	('Tortilla Española', 'Spanish'),
	('Pad Thai', 'Thai'),
	('Thai Green Curry', 'Thai'),
	('Tom Kha Gai', 'Thai'),
	('Tom Yum Soup', 'Thai'),
	('Banh Mi', 'Vietnamese'),
	('Pho', 'Vietnamese'),
	('Spring Rolls', 'Vietnamese'),
	('Vietnamese Spring Rolls', 'Vietnamese');

-- Dumping structure for πίνακας cooking.episodes
CREATE TABLE IF NOT EXISTS `episodes` (
  `episode_id` int(11) NOT NULL AUTO_INCREMENT,
  `season` int(11) NOT NULL,
  `number_of_episode` int(11) NOT NULL,
  PRIMARY KEY (`episode_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.episodes: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.episode_cuisine
CREATE TABLE IF NOT EXISTS `episode_cuisine` (
  `episode_id` int(11) NOT NULL,
  `cuisine_name` varchar(30) NOT NULL,
  PRIMARY KEY (`episode_id`,`cuisine_name`),
  KEY `episode_cuisine_cuisine` (`cuisine_name`),
  CONSTRAINT `episode_cuisine_cuisine` FOREIGN KEY (`cuisine_name`) REFERENCES `national_cuisine` (`cuisine_name`),
  CONSTRAINT `episode_cuisine_episode` FOREIGN KEY (`episode_id`) REFERENCES `episodes` (`episode_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.episode_cuisine: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.episode_recipe
CREATE TABLE IF NOT EXISTS `episode_recipe` (
  `recipe_name` varchar(50) NOT NULL,
  `episode_id` int(11) NOT NULL,
  PRIMARY KEY (`recipe_name`,`episode_id`),
  KEY `episode_recipes_episode` (`episode_id`),
  CONSTRAINT `episode_recipes_episode` FOREIGN KEY (`episode_id`) REFERENCES `episodes` (`episode_id`),
  CONSTRAINT `episode_recipes_recipes` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.episode_recipe: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.equipment
CREATE TABLE IF NOT EXISTS `equipment` (
  `equipment_name` varchar(50) NOT NULL,
  `instructions` varchar(100) NOT NULL,
  PRIMARY KEY (`equipment_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.equipment: ~34 rows (approximately)
INSERT INTO `equipment` (`equipment_name`, `instructions`) VALUES
	('Baking Dish', 'Use for baking casseroles and similar dishes.'),
	('Baking Sheet', 'Use for baking items in the oven.'),
	('Bamboo Mat', 'Use for rolling sushi.'),
	('Blender', 'Use for blending and pureeing ingredients.'),
	('Chopsticks', 'Use for picking up food, especially in Asian cuisine.'),
	('Crepe Pan', 'Use for making crepes.'),
	('Cutting Board', 'Use as a surface for chopping ingredients.'),
	('Deep Fryer', 'Use for deep frying foods.'),
	('Dutch Oven', 'Use for braising, roasting, and stewing.'),
	('Food Processor', 'Use for chopping, slicing, and pureeing ingredients.'),
	('Fork', 'Use for mixing and mashing ingredients.'),
	('Frying Pan', 'Use for frying and sautéing.'),
	('Griddle', 'Use for cooking pancakes, eggs, and other flat items.'),
	('Grill', 'Use for grilling meats and vegetables.'),
	('Knife', 'Use for chopping and slicing ingredients.'),
	('Large Pot', 'Use for cooking large batches of food or boiling water.'),
	('Mixing Bowl', 'Use for combining ingredients.'),
	('Mixing Spoon', 'Use for stirring and mixing ingredients.'),
	('Oven', 'Use for baking and roasting.'),
	('Paella Pan', 'Use for cooking paella and similar dishes.'),
	('Pie Pan', 'Use for baking pies.'),
	('Rice Cooker', 'Use for cooking rice.'),
	('Roasting Pan', 'Use for roasting meats and vegetables.'),
	('Rolling Pin', 'Use for rolling out dough.'),
	('Saucepan', 'Use for cooking sauces, soups, and boiling small quantities of food.'),
	('Serving Plate', 'Use for presenting finished dishes.'),
	('Sharp Knife', 'Use for precision cutting and slicing.'),
	('Soup Spoons', 'Use for serving and eating soup.'),
	('Spatula', 'Use for flipping and stirring foods.'),
	('Stock Pot', 'Use for cooking large batches of soup or broth.'),
	('Strainer', 'Use for straining solids from liquids.'),
	('Tongs', 'Use for handling hot foods.'),
	('Whisk', 'Use for beating and whipping ingredients.'),
	('Wok', 'Use for stir-frying and deep frying.');

-- Dumping structure for procedure cooking.fill_grades
DELIMITER //
CREATE PROCEDURE `fill_grades`(IN ep_id INT)
BEGIN
    DECLARE j INT DEFAULT 0;
    DECLARE judge1 INT;
    DECLARE judge2 INT;
    DECLARE judge3 INT;
    DECLARE cont_id INT;
    
    
    SELECT judge_id INTO judge1 FROM judge WHERE episode_id = ep_id LIMIT 1;
    SELECT judge_id INTO judge2 FROM judge WHERE episode_id = ep_id LIMIT 1 OFFSET 1;
    SELECT judge_id INTO judge3 FROM judge WHERE episode_id = ep_id LIMIT 1 OFFSET 2;


    WHILE j < 10 DO
        
        SELECT contestant_id INTO cont_id FROM contestant WHERE episode_id = ep_id LIMIT 1 OFFSET j;

        

        SET FOREIGN_KEY_CHECKS = 0;

        INSERT INTO grades (grade, contestant_id, judge_id, episode_id)
        VALUES (FLOOR(1 + RAND() * 5), cont_id, judge1, ep_id),
               (FLOOR(1 + RAND() * 5), cont_id, judge2, ep_id),
               (FLOOR(1 + RAND() * 5), cont_id, judge3, ep_id);

        SET FOREIGN_KEY_CHECKS = 1;

            
        SET j = j + 1;
        END WHILE;
        
END//
DELIMITER ;

-- Dumping structure for πίνακας cooking.food_groups
CREATE TABLE IF NOT EXISTS `food_groups` (
  `group_name` enum('Vegetables','Fruits','Cereal and Potatoes','Milk and Dairy Products','Legumes','Red Meat','White Meat','Eggs','Fish and Seafood','Added fats and oils, olives and nuts') NOT NULL,
  `group_description` varchar(200) NOT NULL,
  PRIMARY KEY (`group_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.food_groups: ~10 rows (approximately)
INSERT INTO `food_groups` (`group_name`, `group_description`) VALUES
	('Vegetables', 'A vegetable is the edible portion of a plant.'),
	('Fruits', 'A fruit is a mature, ripened ovary, along with the contents of the ovary.'),
	('Cereal and Potatoes', 'Cereals and potatoes group includes pasta, bread and bakery products, rice, barley, corn, as well as other minor cereals and tubers such as sweet potatoes and topinambur.'),
	('Milk and Dairy Products', 'Dairy products or milk products, also known as lacticinia, are food products made from (or containing) milk.'),
	('Legumes', 'A legume refers to any plant from the Fabaceae family that would include its leaves, stems, and pods. A pulse is the edible seed from a legume plant. Pulses include beans, lentils, and peas.'),
	('Red Meat', 'Red meat refers to fresh unprocessed mammalian muscle meat (e.g. beef, veal, pork, lamb, mutton, horse, or goat meat), which may be minced or frozen, and is usually consumed cooked.'),
	('White Meat', 'In culinary terms, white meat is meat which is pale in color before and after cooking.'),
	('Eggs', 'Bird and reptile eggs consist of a protective eggshell, albumen (egg white), and vitellus (egg yolk), contained within various thin membranes.'),
	('Fish and Seafood', 'Seafood encompasses all commercially obtained freshwater and saltwater fish, molluscan shellfish, and crustaceans.'),
	('Added fats and oils, olives and nuts', 'This group includes added fats and oils such as butter, margarine, olive oil, and nut oils, as well as olives and various types of nuts.');

-- Dumping structure for procedure cooking.generate_episode
DELIMITER //
CREATE PROCEDURE `generate_episode`(IN ep_id INT)
BEGIN
    DECLARE i INT DEFAULT 0;
    DECLARE cuisine VARCHAR(30);
    DECLARE recipe VARCHAR(50);
    DECLARE cont_id INT;
    DECLARE jdg_id INT;
    DECLARE season_num INT;
    DECLARE num_of_episode INT;
    DECLARE gr ENUM ('1','2','3','4','5');

    SET season_num = (ep_id - 1) DIV 10 + 1;
    SET num_of_episode = (ep_id - 1) MOD 10 + 1;

    
    INSERT INTO episodes (episode_id, season, number_of_episode)
    VALUES (ep_id, season_num, num_of_episode);

    WHILE i < 10 DO
        
        SELECT cuisine_name INTO cuisine
        FROM national_cuisine
            WHERE cuisine_name NOT IN (SELECT cuisine_name FROM episode_cuisine WHERE episode_id = ep_id)
        AND (
            (ep_id - 1) MOD 10 + 1 < 4 
            OR (
                cuisine_name NOT IN (SELECT cuisine_name FROM episode_cuisine WHERE episode_id = ep_id - 1)
                AND cuisine_name NOT IN (SELECT cuisine_name FROM episode_cuisine WHERE episode_id = ep_id - 2)
                AND cuisine_name NOT IN (SELECT cuisine_name FROM episode_cuisine WHERE episode_id = ep_id - 3)
            )
            AND EXISTS (
                SELECT 1
                FROM cook_cuisine
                WHERE cuisine_name = cuisine
                AND cook_id NOT IN (
                    SELECT cook_id FROM contestant WHERE episode_id IN (ep_id, ep_id - 1, ep_id - 2, ep_id - 3)
                )
            )
        )
        ORDER BY RAND()
        LIMIT 1;


        IF cuisine IS NOT NULL THEN
            INSERT INTO episode_cuisine (episode_id, cuisine_name)
            VALUES (ep_id, cuisine);

            
            SELECT recipe_name INTO recipe
            FROM cuisine_recipe
            WHERE cuisine_name = cuisine
            ORDER BY RAND()
            LIMIT 1;

            IF recipe IS NOT NULL THEN
                
                SELECT cook_id INTO cont_id
                FROM cook_cuisine
                WHERE cuisine_name = cuisine
                AND cook_id NOT IN (SELECT cook_id FROM contestant WHERE episode_id = ep_id)
                AND (
                    (ep_id - 1) MOD 10 + 1 < 4 
                    OR (
                        cook_id NOT IN (SELECT cook_id FROM contestant WHERE episode_id = ep_id - 1)
                        AND cook_id NOT IN (SELECT cook_id FROM contestant WHERE episode_id = ep_id - 2)
                        AND cook_id NOT IN (SELECT cook_id FROM contestant WHERE episode_id = ep_id - 3)
                    )
                )
                ORDER BY RAND()
                LIMIT 1;

                IF cont_id IS NOT NULL THEN

                    INSERT INTO contestant (episode_id, cook_id, recipe_name, national_cuisine)
                    VALUES (ep_id, cont_id, recipe, cuisine);
                END IF;
            END IF;
        END IF;



        SET i = i + 1;
    END WHILE;

    
    SET i = 0;
    WHILE i < 3 DO
        SELECT cook_id INTO jdg_id
        FROM cook
        WHERE cook_id NOT IN (SELECT cook_id FROM judge WHERE episode_id = ep_id)
        AND cook_id NOT IN (SELECT cook_id FROM contestant WHERE episode_id = ep_id)
        AND (
            (ep_id - 1) MOD 10 + 1 < 4 
            OR (
                cook_id NOT IN (SELECT cook_id FROM judge WHERE episode_id = ep_id - 1)
                AND cook_id NOT IN (SELECT cook_id FROM judge WHERE episode_id = ep_id - 2)
                AND cook_id NOT IN (SELECT cook_id FROM judge WHERE episode_id = ep_id - 3)
            )
        )
        ORDER BY RAND()
        LIMIT 1;

        IF jdg_id IS NOT NULL THEN

            INSERT INTO judge (episode_id, cook_id)
            VALUES (ep_id, jdg_id);

            
        END IF;


        SET i = i + 1;
    END WHILE;

    CALL fill_grades(ep_id);

END//
DELIMITER ;

-- Dumping structure for procedure cooking.generate_episodes
DELIMITER //
CREATE PROCEDURE `generate_episodes`()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 50 DO
        CALL generate_episode(i);
        SET i = i + 1;
    END WHILE;
END//
DELIMITER ;

-- Dumping structure for πίνακας cooking.grades
CREATE TABLE IF NOT EXISTS `grades` (
  `grade_id` int(11) NOT NULL AUTO_INCREMENT,
  `grade` enum('1','2','3','4','5') NOT NULL,
  `contestant_id` int(11) NOT NULL,
  `judge_id` int(11) NOT NULL,
  `episode_id` int(11) NOT NULL,
  PRIMARY KEY (`grade_id`),
  KEY `episode_fk3` (`episode_id`),
  KEY `judge_fk` (`judge_id`),
  KEY `contestant_fk` (`contestant_id`),
  CONSTRAINT `contestant_fk` FOREIGN KEY (`contestant_id`) REFERENCES `contestant` (`contestant_id`),
  CONSTRAINT `episode_fk3` FOREIGN KEY (`episode_id`) REFERENCES `episodes` (`episode_id`),
  CONSTRAINT `judge_fk` FOREIGN KEY (`judge_id`) REFERENCES `judge` (`judge_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.grades: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.ingredients
CREATE TABLE IF NOT EXISTS `ingredients` (
  `ingredient_name` varchar(50) NOT NULL,
  `calories_per_gram` int(11) DEFAULT NULL,
  `group_name` enum('Vegetables','Fruits','Cereal and Potatoes','Milk and Dairy Products','Legumes','Red Meat','White Meat','Eggs','Fish and Seafood','Added fats and oils, olives and nuts') DEFAULT NULL,
  PRIMARY KEY (`ingredient_name`),
  KEY `food_groups_fk_3` (`group_name`),
  CONSTRAINT `food_groups_fk_3` FOREIGN KEY (`group_name`) REFERENCES `food_groups` (`group_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.ingredients: ~173 rows (approximately)
INSERT INTO `ingredients` (`ingredient_name`, `calories_per_gram`, `group_name`) VALUES
	('Apple', 1, 'Fruits'),
	('Apples', 1, 'Fruits'),
	('Avocado', 4, 'Fruits'),
	('Bacon', 5, 'Red Meat'),
	('Baguette', 2, 'Cereal and Potatoes'),
	('Balsamic glaze', 1, 'Added fats and oils, olives and nuts'),
	('Basil leaves', 1, 'Vegetables'),
	('Basmati rice', 2, 'Cereal and Potatoes'),
	('BBQ Sauce', 2, 'Added fats and oils, olives and nuts'),
	('Bean sprouts', 1, 'Vegetables'),
	('Beef', 3, 'Red Meat'),
	('Beef broth', 3, 'Red Meat'),
	('Beer', 4, 'Added fats and oils, olives and nuts'),
	('Bell peppers', 1, 'Vegetables'),
	('Berbere Spice', 0, NULL),
	('Black beans', 3, 'Legumes'),
	('Black olives', 5, 'Added fats and oils, olives and nuts'),
	('Black vinegar', 1, NULL),
	('Bonito flakes', 0, 'Fish and Seafood'),
	('Breadcrumbs', 1, 'Cereal and Potatoes'),
	('Brown sugar', 4, 'Added fats and oils, olives and nuts'),
	('Bulgur wheat', 1, 'Cereal and Potatoes'),
	('Butter', 7, 'Added fats and oils, olives and nuts'),
	('Cabbage', 0, 'Vegetables'),
	('Carrot', 1, 'Vegetables'),
	('Carrots', 1, 'Vegetables'),
	('Cashews', 6, 'Added fats and oils, olives and nuts'),
	('Celery', 0, 'Vegetables'),
	('Cheese', 4, 'Milk and Dairy Products'),
	('Chicken', 3, 'White Meat'),
	('Chickpeas', 3, 'Legumes'),
	('Chocolate Sprinkles', 4, 'Added fats and oils, olives and nuts'),
	('Chorizo', 3, 'Red Meat'),
	('Cilantro', 0, 'Vegetables'),
	('Cinnamon Stick', 0, NULL),
	('Clarified Butter', 7, 'Added fats and oils, olives and nuts'),
	('Cocoa powder', 3, 'Added fats and oils, olives and nuts'),
	('Coconut milk', 5, 'Milk and Dairy Products'),
	('Condensed Milk', 4, 'Milk and Dairy Products'),
	('Cotija cheese', 4, 'Milk and Dairy Products'),
	('Cream', 5, 'Milk and Dairy Products'),
	('Cucumber', 1, 'Vegetables'),
	('Cumin', 1, NULL),
	('Curry powder', 1, NULL),
	('Dill', 1, 'Vegetables'),
	('Duck', 5, 'White Meat'),
	('Egg', 2, 'Eggs'),
	('Eggplant', 2, 'Vegetables'),
	('Eggs', 2, 'Eggs'),
	('Enchilada sauce', 2, 'Vegetables'),
	('Espresso', 1, 'Vegetables'),
	('Feta cheese', 4, 'Milk and Dairy Products'),
	('Fish', 4, 'Fish and Seafood'),
	('Flour', 1, 'Cereal and Potatoes'),
	('Fresh basil', 1, 'Vegetables'),
	('Galangal', 1, 'Vegetables'),
	('Garam masala', 3, 'Added fats and oils, olives and nuts'),
	('Garlic', 1, 'Vegetables'),
	('Garlic Powder', 3, NULL),
	('Ghee', 9, 'Added fats and oils, olives and nuts'),
	('Ginger', 1, 'Vegetables'),
	('Ginger garlic paste', 2, 'Vegetables'),
	('Gochugaru', 1, NULL),
	('Grand Marnier', 4, 'Added fats and oils, olives and nuts'),
	('Grape leaves', 1, 'Vegetables'),
	('Green chilies', 1, 'Vegetables'),
	('Green curry paste', 3, 'Added fats and oils, olives and nuts'),
	('Green onions', 1, 'Vegetables'),
	('Ground beef', 3, 'Red Meat'),
	('Ground lamb', 5, 'Red Meat'),
	('Ground pork', 4, 'White Meat'),
	('Heavy cream', 3, 'Milk and Dairy Products'),
	('Hoisin sauce', 3, 'Added fats and oils, olives and nuts'),
	('Kaffir lime leaves', 1, 'Vegetables'),
	('Kalamata olives', 5, 'Added fats and oils, olives and nuts'),
	('Kashmiri chili powder', 3, 'Added fats and oils, olives and nuts'),
	('Kasuri methi (dried fenugreek leaves)', 2, 'Vegetables'),
	('Ladyfingers', 3, 'Cereal and Potatoes'),
	('Lamb', 2, 'Red Meat'),
	('Lemon juice', 1, 'Fruits'),
	('Lemongrass', 1, 'Vegetables'),
	('Lime juice', 1, 'Fruits'),
	('Marsala wine', 3, 'Added fats and oils, olives and nuts'),
	('Mascarpone cheese', 4, 'Milk and Dairy Products'),
	('Milk', 1, 'Milk and Dairy Products'),
	('Mint', 0, 'Vegetables'),
	('Mint leaves', 0, 'Vegetables'),
	('Mirin', 1, NULL),
	('Mitmita Spice', 0, NULL),
	('Mixed greens', 1, 'Vegetables'),
	('Mixed vegetables', 0, 'Vegetables'),
	('Mozzarella cheese', 4, 'Milk and Dairy Products'),
	('Mushrooms', 1, 'Vegetables'),
	('Mustard', 2, 'Added fats and oils, olives and nuts'),
	('Napa Cabbage', 0, 'Vegetables'),
	('Noodles', 3, 'Cereal and Potatoes'),
	('Nori (seaweed)', 2, 'Fish and Seafood'),
	('Nutmeg', 1, 'Vegetables'),
	('Olive Oil', 9, 'Added fats and oils, olives and nuts'),
	('Onion', 1, 'Vegetables'),
	('Onion Powder', 3, NULL),
	('Onions', 0, 'Vegetables'),
	('Oranges', 1, 'Fruits'),
	('Paneer', 2, 'Milk and Dairy Products'),
	('Paneer cheese', 4, 'Milk and Dairy Products'),
	('Paprika', 0, NULL),
	('Parmesan cheese', 4, 'Milk and Dairy Products'),
	('Parsley', 0, 'Vegetables'),
	('Pasta', 4, 'Cereal and Potatoes'),
	('Peanuts', 6, 'Added fats and oils, olives and nuts'),
	('Phyllo dough', 3, 'Cereal and Potatoes'),
	('Pickled Carrots', 1, 'Vegetables'),
	('Pickled ginger', 1, 'Vegetables'),
	('Pineapple', 3, 'Fruits'),
	('Pita chips', 3, 'Cereal and Potatoes'),
	('Pizza dough', 3, 'Cereal and Potatoes'),
	('Poblano peppers', 1, 'Vegetables'),
	('Pomegranate seeds', 1, 'Fruits'),
	('Pork', 3, 'White Meat'),
	('Pork Ribs', 3, 'Red Meat'),
	('Potato', 1, 'Cereal and Potatoes'),
	('Potatoes', 1, 'Cereal and Potatoes'),
	('Radishes', 1, 'Vegetables'),
	('Red bell pepper', 0, 'Vegetables'),
	('Red onion', 1, 'Vegetables'),
	('Red wine', 3, 'Added fats and oils, olives and nuts'),
	('Rice', 1, 'Cereal and Potatoes'),
	('Rice Noodles', 1, 'Cereal and Potatoes'),
	('Rice Paper', 1, 'Cereal and Potatoes'),
	('Rice vermicelli', 2, 'Cereal and Potatoes'),
	('Rice vinegar', 3, 'Added fats and oils, olives and nuts'),
	('Ricotta cheese', 2, 'Milk and Dairy Products'),
	('Saffron', 3, 'Added fats and oils, olives and nuts'),
	('Salsa', 0, NULL),
	('Salt', 0, NULL),
	('Seafood', 4, 'Fish and Seafood'),
	('Seaweed', 1, 'Vegetables'),
	('Sesame oil', 9, 'Added fats and oils, olives and nuts'),
	('Shrimp', 3, 'Fish and Seafood'),
	('Sichuan peppercorns', 6, 'Added fats and oils, olives and nuts'),
	('Silken tofu', 1, 'Vegetables'),
	('Soy Sauce', 2, 'Added fats and oils, olives and nuts'),
	('Spaghetti', 3, 'Cereal and Potatoes'),
	('Spinach', 1, 'Vegetables'),
	('Sugar', 4, NULL),
	('Sumac', 1, 'Vegetables'),
	('Tahini', 6, 'Added fats and oils, olives and nuts'),
	('Tamarind paste', 2, 'Fruits'),
	('Tandoori masala', 4, NULL),
	('Tapioca Flour', 1, 'Cereal and Potatoes'),
	('Teff Flour', 1, 'Cereal and Potatoes'),
	('Tempura batter', 4, 'Added fats and oils, olives and nuts'),
	('Thai basil', 1, 'Vegetables'),
	('Thai chilies', 1, 'Vegetables'),
	('Thyme', 1, 'Vegetables'),
	('Tofu', 2, 'Legumes'),
	('Tomato', 0, 'Vegetables'),
	('Tomato sauce', 2, 'Vegetables'),
	('Tomatoes', 2, 'Vegetables'),
	('Tortillas', 3, 'Cereal and Potatoes'),
	('Turmeric', 0, NULL),
	('Veal', 2, 'Red Meat'),
	('Veal shanks', 2, 'White Meat'),
	('Vegetables', 0, 'Vegetables'),
	('Vermicelli Noodles', 1, 'Cereal and Potatoes'),
	('Walnuts', 6, 'Added fats and oils, olives and nuts'),
	('Wasabi', 1, 'Vegetables'),
	('Water', 0, NULL),
	('White pepper', 3, NULL),
	('White wine', 1, NULL),
	('Yeast', 0, 'Cereal and Potatoes'),
	('Yogurt', 3, 'Milk and Dairy Products'),
	('Zucchini', 1, 'Vegetables');

-- Dumping structure for πίνακας cooking.judge
CREATE TABLE IF NOT EXISTS `judge` (
  `judge_id` int(11) NOT NULL AUTO_INCREMENT,
  `episode_id` int(11) NOT NULL,
  `cook_id` int(11) NOT NULL,
  PRIMARY KEY (`judge_id`),
  KEY `episode_fk1` (`episode_id`),
  KEY `cook_fk3` (`cook_id`),
  CONSTRAINT `cook_fk3` FOREIGN KEY (`cook_id`) REFERENCES `cook` (`cook_id`),
  CONSTRAINT `episode_fk1` FOREIGN KEY (`episode_id`) REFERENCES `episodes` (`episode_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.judge: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.meal_recipe
CREATE TABLE IF NOT EXISTS `meal_recipe` (
  `recipe_name` varchar(50) NOT NULL,
  `meal_name` varchar(50) NOT NULL,
  PRIMARY KEY (`recipe_name`,`meal_name`),
  CONSTRAINT `meal_recipe_ibfk_1` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.meal_recipe: ~112 rows (approximately)
INSERT INTO `meal_recipe` (`recipe_name`, `meal_name`) VALUES
	('Apple Pie', 'Dessert'),
	('Banh Mi', 'Lunch'),
	('BBQ Ribs', 'Dinner'),
	('BBQ Ribs', 'Lunch'),
	('Beef Bourguignon', 'Dinner'),
	('Beef Bourguignon', 'Lunch'),
	('Beef Stew', 'Dinner'),
	('Bibimbap', 'Dinner'),
	('Brigadeiro', 'Dessert'),
	('Bulgogi', 'Dinner'),
	('Butter Chicken', 'Dinner'),
	('Butter Chicken', 'Lunch'),
	('Caprese Pizza', 'Dinner'),
	('Caprese Pizza', 'Lunch'),
	('Carbonnade Flamande', 'Dinner'),
	('Carbonnade Flamande', 'Lunch'),
	('Ceviche', 'Lunch'),
	('Chicken Biryani', 'Dinner'),
	('Chicken Biryani', 'Lunch'),
	('Chicken Korma', 'Dinner'),
	('Chicken Korma', 'Lunch'),
	('Chicken Tikka Masala', 'Dinner'),
	('Chicken Tikka Masala', 'Lunch'),
	('Chilaquiles', 'Dinner'),
	('Chilaquiles', 'Lunch'),
	('Chiles en Nogada', 'Dinner'),
	('Chiles en Nogada', 'Lunch'),
	('Coq au Vin', 'Dinner'),
	('Coq au Vin', 'Lunch'),
	('Crepes Suzette', 'Dessert'),
	('Crepes Suzette', 'Dinner'),
	('Crepes Suzette', 'Lunch'),
	('Dolmades', 'Dinner'),
	('Dolmades', 'Lunch'),
	('Doro Wat', 'Dinner'),
	('Eggplant Parmesan', 'Dinner'),
	('Eggplant Parmesan', 'Lunch'),
	('Enchiladas', 'Dinner'),
	('Enchiladas', 'Lunch'),
	('Falafel', 'Dinner'),
	('Falafel', 'Lunch'),
	('Fattoush', 'Breakfast'),
	('Feijoada', 'Dinner'),
	('Gazpacho', 'Lunch'),
	('Greek Salad', 'Breakfast'),
	('Guacamole', 'Breakfast'),
	('Gyoza', 'Dinner'),
	('Gyoza', 'Lunch'),
	('Hot and Sour Soup', 'Dinner'),
	('Hot and Sour Soup', 'Lunch'),
	('Hummus', 'Breakfast'),
	('Injera', 'Dinner'),
	('Kimchi', 'Dinner'),
	('Kitfo', 'Dinner'),
	('Kung Pao Chicken', 'Dinner'),
	('Kung Pao Chicken', 'Lunch'),
	('Kung Pao Shrimp', 'Dinner'),
	('Kung Pao Shrimp', 'Lunch'),
	('Lamb Tagine', 'Dinner'),
	('Lasagna', 'Dinner'),
	('Lasagna', 'Lunch'),
	('Mapo Tofu', 'Dinner'),
	('Mapo Tofu', 'Lunch'),
	('Margherita Pizza', 'Dinner'),
	('Miso Soup', 'Breakfast'),
	('Moussaka', 'Dinner'),
	('Moussaka', 'Lunch'),
	('Osso Buco', 'Dinner'),
	('Osso Buco', 'Lunch'),
	('Pad Thai', 'Dinner'),
	('Pad Thai', 'Lunch'),
	('Paella', 'Dinner'),
	('Paella', 'Lunch'),
	('Palak Paneer', 'Dinner'),
	('Palak Paneer', 'Lunch'),
	('Paneer Tikka', 'Dinner'),
	('Paneer Tikka', 'Lunch'),
	('Pão de Queijo', 'Breakfast'),
	('Pasta Primavera', 'Dinner'),
	('Pasta Primavera', 'Lunch'),
	('Peking Duck', 'Dinner'),
	('Peking Duck', 'Lunch'),
	('Pho', 'Dinner'),
	('Ratatouille', 'Dinner'),
	('Ratatouille', 'Lunch'),
	('Sashimi', 'Lunch'),
	('Shakshuka', 'Breakfast'),
	('Spaghetti Carbonara', 'Dinner'),
	('Spaghetti Carbonara', 'Lunch'),
	('Spanakopita', 'Dinner'),
	('Spanakopita', 'Lunch'),
	('Spring Rolls', 'Lunch'),
	('Sushi Rolls', 'Breakfast'),
	('Tabbouleh', 'Breakfast'),
	('Tacos al Pastor', 'Dinner'),
	('Tacos al Pastor', 'Lunch'),
	('Tempura', 'Dinner'),
	('Tempura', 'Lunch'),
	('Tempura Vegetables', 'Lunch'),
	('Thai Green Curry', 'Dinner'),
	('Thai Green Curry', 'Lunch'),
	('Tiramisu', 'Breakfast'),
	('Tiramisu', 'Dessert'),
	('Tofu Curry', 'Dinner'),
	('Tofu Curry', 'Lunch'),
	('Tom Kha Gai', 'Dinner'),
	('Tom Kha Gai', 'Lunch'),
	('Tom Yum Soup', 'Dinner'),
	('Tom Yum Soup', 'Lunch'),
	('Tortilla Española', 'Breakfast'),
	('Vietnamese Spring Rolls', 'Dinner'),
	('Vietnamese Spring Rolls', 'Lunch');

-- Dumping structure for πίνακας cooking.national_cuisine
CREATE TABLE IF NOT EXISTS `national_cuisine` (
  `cuisine_name` varchar(30) NOT NULL,
  PRIMARY KEY (`cuisine_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.national_cuisine: ~20 rows (approximately)
INSERT INTO `national_cuisine` (`cuisine_name`) VALUES
	('American'),
	('Brazilian'),
	('Chinese'),
	('Ethiopian'),
	('French'),
	('Greek'),
	('Indian'),
	('Israeli'),
	('Italian'),
	('Japanese'),
	('Korean'),
	('Latin American'),
	('Lebanese'),
	('Mexican'),
	('Moroccan'),
	('Russian'),
	('Spanish'),
	('Thai'),
	('Turkish'),
	('Vietnamese');

-- Dumping structure for πίνακας cooking.nutrition_information
CREATE TABLE IF NOT EXISTS `nutrition_information` (
  `info_id` int(11) NOT NULL AUTO_INCREMENT,
  `recipe_name` varchar(50) NOT NULL,
  `gram_fat` int(11) DEFAULT NULL,
  `gram_prot` int(11) DEFAULT NULL,
  `gram_carbo` int(11) DEFAULT NULL,
  `calories` int(11) DEFAULT NULL,
  PRIMARY KEY (`info_id`),
  KEY `recipe_name` (`recipe_name`),
  CONSTRAINT `nutrition_information_ibfk_1` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.nutrition_information: ~70 rows (approximately)
INSERT INTO `nutrition_information` (`info_id`, `recipe_name`, `gram_fat`, `gram_prot`, `gram_carbo`, `calories`) VALUES
	(1, 'Spaghetti Carbonara', 15, 25, 30, 1300),
	(2, 'Coq au Vin', 20, 30, 20, 4800),
	(3, 'Kung Pao Chicken', 18, 28, 25, 2250),
	(4, 'Chicken Tikka Masala', 22, 24, 35, 3100),
	(5, 'Tacos al Pastor', 12, 20, 15, 3000),
	(6, 'Sushi Rolls', 8, 15, 40, 750),
	(7, 'Tom Yum Soup', 5, 10, 15, 1360),
	(8, 'Greek Salad', 10, 5, 20, 850),
	(9, 'Paella', 15, 30, 40, 2350),
	(10, 'Hummus', 10, 5, 20, 1850),
	(11, 'Margherita Pizza', 20, 15, 30, 1950),
	(12, 'Beef Bourguignon', 25, 35, 20, 4000),
	(13, 'Mapo Tofu', 10, 20, 15, 2200),
	(14, 'Chicken Biryani', 30, 25, 45, 2900),
	(15, 'Guacamole', 15, 5, 20, 1600),
	(16, 'Tempura', 12, 18, 30, 2400),
	(17, 'Pad Thai', 15, 20, 40, 2200),
	(18, 'Moussaka', 20, 25, 35, 3600),
	(19, 'Gazpacho', 5, 2, 10, 200),
	(20, 'Falafel', 10, 15, 25, 1200),
	(21, 'Lasagna', 25, 20, 35, 3900),
	(22, 'Ratatouille', 10, 5, 25, 1200),
	(23, 'Peking Duck', 30, 35, 20, 5600),
	(24, 'Palak Paneer', 15, 20, 25, 1700),
	(25, 'Chiles en Nogada', 18, 20, 30, 1200),
	(26, 'Sashimi', 5, 20, 10, 2200),
	(27, 'Tom Kha Gai', 8, 12, 15, 3810),
	(28, 'Dolmades', 12, 5, 25, 500),
	(29, 'Fattoush', 8, 5, 20, 600),
	(30, 'Carbonnade Flamande', 25, 30, 25, 4400),
	(31, 'Tiramisu', 20, 10, 40, 1700),
	(32, 'Crepes Suzette', 18, 8, 35, 500),
	(33, 'Kung Pao Shrimp', 15, 22, 30, 1400),
	(34, 'Butter Chicken', 20, 25, 30, 2500),
	(35, 'Enchiladas', 22, 18, 25, 1950),
	(36, 'Tempura Vegetables', 10, 8, 30, 400),
	(37, 'Thai Green Curry', 12, 15, 25, 3800),
	(38, 'Spanakopita', 15, 10, 30, 2000),
	(39, 'Tabbouleh', 5, 8, 20, 400),
	(40, 'Osso Buco', 30, 35, 25, 4200),
	(41, 'Hot and Sour Soup', 8, 10, 15, 800),
	(42, 'Paneer Tikka', 12, 18, 25, 2800),
	(43, 'Chilaquiles', 20, 15, 30, 900),
	(44, 'Miso Soup', 5, 10, 10, 700),
	(45, 'Ceviche', 10, 20, 15, 2200),
	(46, 'Eggplant Parmesan', 18, 15, 30, 2000),
	(47, 'Vietnamese Spring Rolls', 8, 12, 20, 1600),
	(48, 'Chicken Korma', 20, 25, 35, 2400),
	(49, 'Caprese Pizza', 20, 15, 30, 1300),
	(50, 'Gyoza', 15, 20, 25, 1200),
	(51, 'Pasta Primavera', 12, 15, 35, 1200),
	(52, 'Tofu Curry', 10, 18, 25, 1800),
	(53, 'Pho', 8, 12, 25, 1750),
	(54, 'Banh Mi', 12, 18, 30, 900),
	(55, 'Spring Rolls', 6, 8, 15, 600),
	(56, 'Beef Stew', 20, 25, 35, 2900),
	(57, 'Apple Pie', 15, 10, 40, 2000),
	(58, 'BBQ Ribs', 30, 28, 15, 3460),
	(59, 'Feijoada', 25, 30, 20, 3320),
	(60, 'Pão de Queijo', 18, 12, 22, 2850),
	(61, 'Brigadeiro', 8, 5, 20, 2360),
	(62, 'Kimchi', 3, 2, 5, 50),
	(63, 'Bibimbap', 15, 20, 30, 750),
	(64, 'Bulgogi', 18, 22, 25, 1740),
	(65, 'Doro Wat', 22, 28, 18, 3020),
	(66, 'Injera', 5, 3, 10, 300),
	(67, 'Kitfo', 25, 30, 15, 2200),
	(68, 'Lamb Tagine', 20, 30, 40, 2545),
	(69, 'Tortilla Española', 15, 25, 35, 1370),
	(70, 'Shakshuka', 10, 20, 30, 398);

-- Dumping structure for πίνακας cooking.recipes
CREATE TABLE IF NOT EXISTS `recipes` (
  `recipe_name` varchar(50) NOT NULL,
  `short_desc` varchar(200) NOT NULL,
  `difficulty_level` enum('1','2','3','4','5') NOT NULL,
  `tip1` varchar(200) DEFAULT NULL,
  `tip2` varchar(200) DEFAULT NULL,
  `tip3` varchar(200) DEFAULT NULL,
  `prep_time` time NOT NULL,
  `cooking_time` time NOT NULL,
  `quantities` int(11) NOT NULL,
  `main_ingredient` varchar(50) NOT NULL,
  PRIMARY KEY (`recipe_name`),
  KEY `ingredients_fk_2` (`main_ingredient`),
  CONSTRAINT `ingredients_fk_2` FOREIGN KEY (`main_ingredient`) REFERENCES `ingredients` (`ingredient_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.recipes: ~70 rows (approximately)
INSERT INTO `recipes` (`recipe_name`, `short_desc`, `difficulty_level`, `tip1`, `tip2`, `tip3`, `prep_time`, `cooking_time`, `quantities`, `main_ingredient`) VALUES
	('Apple Pie', 'Classic American apple pie with a flaky crust.', '4', 'Use a mix of sweet and tart apples.', 'Brush the crust with egg wash.', NULL, '00:30:00', '01:00:00', 8, 'Apple'),
	('Banh Mi', 'Vietnamese sandwich with pickled vegetables and meat.', '2', 'Use a crusty baguette.', NULL, NULL, '00:15:00', '00:20:00', 2, 'Pork'),
	('BBQ Ribs', 'American BBQ ribs with smoky flavor.', '3', 'Marinate the ribs overnight.', NULL, NULL, '00:15:00', '03:00:00', 4, 'Pork Ribs'),
	('Beef Bourguignon', 'French beef stew cooked in red wine', '4', 'Use a good quality red wine', 'Cook slowly for tender meat', 'Serve with crusty bread', '00:30:00', '02:30:00', 6, 'Beef'),
	('Beef Stew', 'Hearty American beef stew with vegetables.', '3', 'Brown the beef first.', 'Use red wine for depth of flavor.', NULL, '00:20:00', '03:00:00', 6, 'Beef'),
	('Bibimbap', 'Korean rice bowl with assorted toppings.', '3', 'Use a variety of vegetables.', 'Serve with a fried egg on top.', 'Mix well before eating.', '00:20:00', '00:30:00', 4, 'Rice'),
	('Brigadeiro', 'Brazilian chocolate truffles.', '1', 'Use good quality cocoa powder.', NULL, NULL, '00:10:00', '00:10:00', 20, 'Condensed Milk'),
	('Bulgogi', 'Korean marinated beef.', '2', 'Marinate the beef overnight.', 'Cook on high heat.', 'Serve with rice and lettuce wraps.', '00:20:00', '00:15:00', 4, 'Beef'),
	('Butter Chicken', 'Indian creamy tomato-based chicken curry', '3', 'Marinate chicken for better flavor', 'Use fresh cream for richness', NULL, '00:20:00', '00:30:00', 4, 'Chicken'),
	('Caprese Pizza', 'Italian pizza topped with tomatoes, mozzarella cheese, and basil', '2', 'Use fresh basil leaves', 'Top with fresh mozzarella', NULL, '00:20:00', '00:15:00', 4, 'Pizza dough'),
	('Carbonnade Flamande', 'Belgian beef and beer stew', '4', 'Use Belgian beer for authenticity', 'Cook slowly for tender meat', NULL, '00:30:00', '02:00:00', 6, 'Beef'),
	('Ceviche', 'Latin American seafood dish marinated in citrus juices', '2', 'Use fresh lime juice', 'Serve chilled', NULL, '00:15:00', '00:00:00', 4, 'Fish'),
	('Chicken Biryani', 'Fragrant Indian rice dish with chicken and spices', '4', 'Marinate chicken for better flavor', 'Use basmati rice for best results', NULL, '00:30:00', '01:00:00', 6, 'Chicken'),
	('Chicken Korma', 'Indian chicken curry cooked with yogurt, cream, and spices', '3', 'Marinate chicken for better flavor', 'Use fresh cream for richness', NULL, '00:30:00', '00:45:00', 4, 'Chicken'),
	('Chicken Tikka Masala', 'Iconic Indian curry dish', '3', 'Marinate chicken for at least 2 hours', NULL, NULL, '00:30:00', '00:30:00', 4, 'Chicken'),
	('Chilaquiles', 'Mexican tortilla casserole with salsa and cheese', '2', 'Use fresh salsa', 'Top with sour cream and cheese', NULL, '00:20:00', '00:30:00', 4, 'Tortillas'),
	('Chiles en Nogada', 'Mexican stuffed poblano peppers with walnut sauce', '4', 'Use fresh pomegranates for garnish', 'Serve at room temperature', 'Use roasted walnuts for the sauce', '00:30:00', '00:45:00', 6, 'Poblano peppers'),
	('Coq au Vin', 'Classic French chicken dish', '4', 'Marinate overnight for best flavor', 'Use a good quality red wine', NULL, '00:20:00', '01:30:00', 6, 'Chicken'),
	('Crepes Suzette', 'French thin pancakes with orange sauce and Grand Marnier', '3', 'Use fresh orange juice', 'Flambe with Grand Marnier', NULL, '00:15:00', '00:15:00', 4, 'Flour'),
	('Dolmades', 'Greek stuffed grape leaves with rice and herbs', '3', 'Use fresh grape leaves', 'Serve with lemon wedges', 'Add fresh dill for extra flavor', '00:30:00', '00:45:00', 6, 'Grape leaves'),
	('Doro Wat', 'Ethiopian spicy chicken stew.', '4', 'Use berbere spice mix.', 'Serve with injera.', NULL, '00:20:00', '01:30:00', 6, 'Chicken'),
	('Eggplant Parmesan', 'Italian baked eggplant dish with tomato sauce and cheese', '3', 'Use fresh eggplants', 'Top with mozzarella cheese', NULL, '00:30:00', '00:45:00', 4, 'Eggplant'),
	('Enchiladas', 'Mexican rolled tortillas stuffed with meat and cheese, topped with sauce', '3', 'Use fresh tortillas', 'Top with cheese and bake until bubbly', NULL, '00:20:00', '00:30:00', 4, 'Tortillas'),
	('Falafel', 'Lebanese fried chickpea patties', '2', 'Use dried chickpeas soaked overnight', 'Add fresh herbs for better flavor', NULL, '00:20:00', '00:20:00', 4, 'Chickpeas'),
	('Fattoush', 'Lebanese salad with mixed greens, vegetables, and pita chips', '2', 'Use toasted pita chips', 'Add sumac for extra tang', NULL, '00:15:00', '00:00:00', 4, 'Mixed greens'),
	('Feijoada', 'Brazilian black bean stew with pork.', '3', 'Use a variety of pork cuts.', 'Serve with orange slices.', 'Add a bay leaf for extra flavor.', '00:30:00', '02:30:00', 6, 'Black Beans'),
	('Gazpacho', 'Traditional Spanish cold tomato soup', '1', 'Serve chilled', NULL, NULL, '00:15:00', '00:00:00', 4, 'Tomato'),
	('Greek Salad', 'Traditional Greek salad', '1', 'Use fresh and ripe tomatoes', 'Add olives for extra flavor', NULL, '00:10:00', '00:00:00', 2, 'Tomato'),
	('Guacamole', 'Mexican avocado dip with tomatoes and lime', '1', 'Use ripe avocados', 'Add lime juice to prevent browning', NULL, '00:15:00', '00:00:00', 4, 'Avocado'),
	('Gyoza', 'Japanese pan-fried dumplings filled with ground meat and vegetables', '3', 'Use fresh ginger for better flavor', 'Serve with dipping sauce', NULL, '00:30:00', '00:20:00', 4, 'Pork'),
	('Hot and Sour Soup', 'Chinese spicy and tangy soup with mushrooms and tofu', '2', 'Use fresh tofu', NULL, NULL, '00:20:00', '00:20:00', 4, 'Tofu'),
	('Hummus', 'Classic Lebanese dip', '1', 'Use fresh lemon juice', 'Add a pinch of cumin for extra flavor', NULL, '00:10:00', '00:00:00', 4, 'Chickpeas'),
	('Injera', 'Ethiopian sourdough flatbread.', '4', 'Ferment the batter for 3 days.', 'Cook on a hot griddle.', NULL, '00:10:00', '00:05:00', 12, 'Teff Flour'),
	('Kimchi', 'Spicy fermented Korean cabbage.', '3', 'Use Korean chili powder.', 'Ferment for at least a week.', NULL, '00:30:00', '00:00:00', 10, 'Cabbage'),
	('Kitfo', 'Ethiopian seasoned raw beef.', '3', 'Use high-quality beef.', 'Serve with injera or bread.', NULL, '00:15:00', '00:00:00', 4, 'Beef'),
	('Kung Pao Chicken', 'Popular Chinese stir-fry dish', '3', 'Prepare all ingredients before cooking', NULL, NULL, '00:15:00', '00:20:00', 4, 'Chicken'),
	('Kung Pao Shrimp', 'Chinese stir-fried shrimp dish with peanuts and chili peppers', '3', 'Prepare all ingredients before cooking', 'Adjust spice level to taste', NULL, '00:15:00', '00:15:00', 4, 'Shrimp'),
	('Lamb Tagine', 'Moroccan slow-cooked lamb stew with spices and dried fruits', '4', 'Use a tagine pot for best results', 'Cook slowly for tender meat', 'Serve with couscous', '00:20:00', '02:00:00', 6, 'Lamb'),
	('Lasagna', 'Classic Italian layered pasta dish with meat and cheese', '4', 'Use ricotta cheese for creaminess', 'Let it rest before serving', NULL, '00:30:00', '01:00:00', 6, 'Pasta'),
	('Mapo Tofu', 'Spicy Chinese tofu dish with minced meat', '3', 'Use soft tofu for best texture', NULL, NULL, '00:20:00', '00:20:00', 4, 'Tofu'),
	('Margherita Pizza', 'Classic Italian pizza with tomato, mozzarella, and basil', '2', 'Use fresh basil leaves', 'Bake on a pizza stone for best results', NULL, '00:20:00', '00:15:00', 4, 'Pizza dough'),
	('Miso Soup', 'Japanese soup made with soybean paste, tofu, and seaweed', '2', 'Use miso paste for authentic flavor', 'Serve hot', NULL, '00:10:00', '00:10:00', 4, 'Tofu'),
	('Moussaka', 'Greek eggplant and lamb casserole with bechamel sauce', '4', 'Let it rest before serving', NULL, NULL, '00:30:00', '01:00:00', 6, 'Eggplant'),
	('Osso Buco', 'Italian braised veal shanks with vegetables and white wine', '4', 'Cook slowly for tender meat', 'Serve with gremolata', 'Pair with a glass of white wine', '00:30:00', '02:00:00', 6, 'Veal'),
	('Pad Thai', 'Classic Thai stir-fried noodle dish with shrimp', '3', 'Use tamarind paste for authentic taste', 'Add peanuts for extra crunch', NULL, '00:20:00', '00:15:00', 4, 'Noodles'),
	('Paella', 'Traditional Spanish rice dish', '4', 'Use saffron for authentic taste', 'Cook rice evenly for best texture', 'Serve with lemon wedges', '00:20:00', '00:30:00', 6, 'Rice'),
	('Palak Paneer', 'Indian spinach curry with paneer cheese', '3', 'Use fresh spinach', 'Add cream for richness', NULL, '00:20:00', '00:30:00', 4, 'Spinach'),
	('Paneer Tikka', 'Indian grilled paneer cheese skewers with spices and vegetables', '3', 'Marinate paneer for at least 2 hours', 'Use skewers for grilling', NULL, '00:20:00', '00:15:00', 4, 'Paneer'),
	('Pão de Queijo', 'Brazilian cheese bread.', '2', 'Use tapioca flour.', 'Grate the cheese finely.', NULL, '00:15:00', '00:25:00', 24, 'Cheese'),
	('Pasta Primavera', 'Italian pasta dish with fresh vegetables and Parmesan cheese', '2', 'Use seasonal vegetables', 'Top with grated Parmesan', NULL, '00:20:00', '00:20:00', 4, 'Pasta'),
	('Peking Duck', 'Chinese roast duck dish with crispy skin', '5', 'Air-dry duck for crispy skin', 'Serve with hoisin sauce', NULL, '00:30:00', '02:00:00', 6, 'Duck'),
	('Pho', 'Traditional Vietnamese noodle soup with beef or chicken.', '3', 'Use fresh herbs for garnish.', 'Serve with lime wedges.', NULL, '00:20:00', '02:00:00', 4, 'Beef'),
	('Ratatouille', 'French vegetable stew with tomatoes, eggplant, and zucchini', '3', 'Use fresh vegetables', 'Serve with crusty bread', NULL, '00:20:00', '00:40:00', 4, 'Vegetables'),
	('Sashimi', 'Japanese sliced raw fish dish', '3', 'Use sushi-grade fish', 'Serve with soy sauce and wasabi', NULL, '00:30:00', '00:00:00', 4, 'Fish'),
	('Shakshuka', 'Middle Eastern poached eggs in spicy tomato sauce', '2', 'Use fresh tomatoes', 'Top with crumbled feta', NULL, '00:15:00', '00:15:00', 4, 'Tomato'),
	('Spaghetti Carbonara', 'Classic Italian pasta dish', '3', 'Use fresh eggs', 'Keep in fridge for up to 3 days', NULL, '00:15:00', '00:20:00', 4, 'Spaghetti'),
	('Spanakopita', 'Greek spinach and feta cheese pie in phyllo pastry', '3', 'Use fresh spinach', 'Brush phyllo with melted butter', NULL, '00:30:00', '00:30:00', 6, 'Spinach'),
	('Spring Rolls', 'Fresh Vietnamese spring rolls with shrimp or pork.', '2', 'Use fresh mint and cilantro.', 'Soak rice paper briefly.', NULL, '00:30:00', '00:10:00', 4, 'Shrimp'),
	('Sushi Rolls', 'Japanese sushi rolls', '3', 'Use sushi-grade fish', 'Keep hands wet to prevent sticking', NULL, '00:45:00', '00:30:00', 4, 'Rice'),
	('Tabbouleh', 'Lebanese parsley and bulgur wheat salad with tomatoes and mint', '2', 'Use fresh mint leaves', 'Chill before serving', NULL, '00:15:00', '00:00:00', 4, 'Parsley'),
	('Tacos al Pastor', 'Traditional Mexican street food', '2', 'Use fresh pineapple for best taste', 'Grill meat for authentic flavor', NULL, '00:20:00', '00:30:00', 6, 'Pork'),
	('Tempura', 'Japanese deep-fried seafood and vegetables', '3', 'Use ice-cold batter for crispiness', 'Fry in small batches', NULL, '00:20:00', '00:10:00', 4, 'Seafood'),
	('Tempura Vegetables', 'Japanese deep-fried battered vegetables', '2', 'Use ice-cold batter for crispiness', 'Serve with tempura dipping sauce', NULL, '00:20:00', '00:10:00', 4, 'Vegetables'),
	('Thai Green Curry', 'Thai spicy coconut milk-based curry with chicken and vegetables', '3', 'Use fresh lemongrass', 'Serve with jasmine rice', NULL, '00:20:00', '00:30:00', 4, 'Chicken'),
	('Tiramisu', 'Classic Italian dessert with coffee-soaked ladyfingers and mascarpone', '2', 'Use strong espresso', 'Chill overnight for best flavor', NULL, '00:30:00', '00:00:00', 6, 'Ladyfingers'),
	('Tofu Curry', 'Asian curry dish with tofu, vegetables, and coconut milk', '2', 'Use firm tofu', 'Serve with steamed rice', NULL, '00:25:00', '00:25:00', 4, 'Tofu'),
	('Tom Kha Gai', 'Thai coconut chicken soup with lemongrass and galangal', '2', 'Use fresh herbs for best flavor', NULL, NULL, '00:20:00', '00:20:00', 4, 'Chicken'),
	('Tom Yum Soup', 'Classic Thai spicy soup', '2', 'Use fresh herbs for better flavor', NULL, NULL, '00:15:00', '00:20:00', 4, 'Shrimp'),
	('Tortilla Española', 'Spanish potato omelette', '2', 'Use waxy potatoes', 'Let it cool before serving', NULL, '00:10:00', '00:30:00', 4, 'Potato'),
	('Vietnamese Spring Rolls', 'Vietnamese rice paper rolls filled with shrimp, vegetables, and vermicelli noodles', '2', 'Use fresh herbs for best flavor', 'Serve with dipping sauce', NULL, '00:30:00', '00:30:00', 4, 'Shrimp');

-- Dumping structure for πίνακας cooking.recipes_equipment
CREATE TABLE IF NOT EXISTS `recipes_equipment` (
  `recipe_name` varchar(50) NOT NULL,
  `equipment_name` varchar(50) NOT NULL,
  PRIMARY KEY (`recipe_name`,`equipment_name`),
  KEY `equipment_fk` (`equipment_name`),
  CONSTRAINT `equipment_fk` FOREIGN KEY (`equipment_name`) REFERENCES `equipment` (`equipment_name`),
  CONSTRAINT `recipes_fk_1` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.recipes_equipment: ~197 rows (approximately)
INSERT INTO `recipes_equipment` (`recipe_name`, `equipment_name`) VALUES
	('Chiles en Nogada', 'Baking Dish'),
	('Eggplant Parmesan', 'Baking Dish'),
	('Enchiladas', 'Baking Dish'),
	('Lasagna', 'Baking Dish'),
	('Moussaka', 'Baking Dish'),
	('Ratatouille', 'Baking Dish'),
	('Spanakopita', 'Baking Dish'),
	('Tiramisu', 'Baking Dish'),
	('Banh Mi', 'Baking Sheet'),
	('Caprese Pizza', 'Baking Sheet'),
	('Margherita Pizza', 'Baking Sheet'),
	('Pão de Queijo', 'Baking Sheet'),
	('Sushi Rolls', 'Bamboo Mat'),
	('Gazpacho', 'Blender'),
	('Palak Paneer', 'Blender'),
	('Pho', 'Chopsticks'),
	('Crepes Suzette', 'Crepe Pan'),
	('Beef Bourguignon', 'Cutting Board'),
	('Carbonnade Flamande', 'Cutting Board'),
	('Ceviche', 'Cutting Board'),
	('Coq au Vin', 'Cutting Board'),
	('Fattoush', 'Cutting Board'),
	('Greek Salad', 'Cutting Board'),
	('Hot and Sour Soup', 'Cutting Board'),
	('Kitfo', 'Cutting Board'),
	('Lamb Tagine', 'Cutting Board'),
	('Moussaka', 'Cutting Board'),
	('Osso Buco', 'Cutting Board'),
	('Ratatouille', 'Cutting Board'),
	('Shakshuka', 'Cutting Board'),
	('Spring Rolls', 'Cutting Board'),
	('Tabbouleh', 'Cutting Board'),
	('Tacos al Pastor', 'Cutting Board'),
	('Tom Kha Gai', 'Cutting Board'),
	('Tom Yum Soup', 'Cutting Board'),
	('Tortilla Española', 'Cutting Board'),
	('Vietnamese Spring Rolls', 'Cutting Board'),
	('Tempura', 'Deep Fryer'),
	('Tempura Vegetables', 'Deep Fryer'),
	('Beef Bourguignon', 'Dutch Oven'),
	('Beef Stew', 'Dutch Oven'),
	('Carbonnade Flamande', 'Dutch Oven'),
	('Coq au Vin', 'Dutch Oven'),
	('Lamb Tagine', 'Dutch Oven'),
	('Osso Buco', 'Dutch Oven'),
	('Falafel', 'Food Processor'),
	('Hummus', 'Food Processor'),
	('Guacamole', 'Fork'),
	('Butter Chicken', 'Frying Pan'),
	('Chicken Korma', 'Frying Pan'),
	('Chicken Tikka Masala', 'Frying Pan'),
	('Chilaquiles', 'Frying Pan'),
	('Falafel', 'Frying Pan'),
	('Gyoza', 'Frying Pan'),
	('Spaghetti Carbonara', 'Frying Pan'),
	('Tortilla Española', 'Frying Pan'),
	('Injera', 'Griddle'),
	('BBQ Ribs', 'Grill'),
	('Bulgogi', 'Grill'),
	('Paneer Tikka', 'Grill'),
	('Tacos al Pastor', 'Grill'),
	('Beef Bourguignon', 'Knife'),
	('Carbonnade Flamande', 'Knife'),
	('Ceviche', 'Knife'),
	('Chicken Tikka Masala', 'Knife'),
	('Chiles en Nogada', 'Knife'),
	('Coq au Vin', 'Knife'),
	('Doro Wat', 'Knife'),
	('Eggplant Parmesan', 'Knife'),
	('Enchiladas', 'Knife'),
	('Fattoush', 'Knife'),
	('Gazpacho', 'Knife'),
	('Greek Salad', 'Knife'),
	('Guacamole', 'Knife'),
	('Hot and Sour Soup', 'Knife'),
	('Kimchi', 'Knife'),
	('Kitfo', 'Knife'),
	('Lamb Tagine', 'Knife'),
	('Miso Soup', 'Knife'),
	('Moussaka', 'Knife'),
	('Osso Buco', 'Knife'),
	('Palak Paneer', 'Knife'),
	('Peking Duck', 'Knife'),
	('Ratatouille', 'Knife'),
	('Shakshuka', 'Knife'),
	('Spring Rolls', 'Knife'),
	('Tabbouleh', 'Knife'),
	('Tacos al Pastor', 'Knife'),
	('Tom Kha Gai', 'Knife'),
	('Tom Yum Soup', 'Knife'),
	('Tortilla Española', 'Knife'),
	('Vietnamese Spring Rolls', 'Knife'),
	('Chicken Biryani', 'Large Pot'),
	('Dolmades', 'Large Pot'),
	('Feijoada', 'Large Pot'),
	('Apple Pie', 'Mixing Bowl'),
	('Butter Chicken', 'Mixing Bowl'),
	('Caprese Pizza', 'Mixing Bowl'),
	('Ceviche', 'Mixing Bowl'),
	('Chicken Biryani', 'Mixing Bowl'),
	('Chicken Korma', 'Mixing Bowl'),
	('Chicken Tikka Masala', 'Mixing Bowl'),
	('Chilaquiles', 'Mixing Bowl'),
	('Crepes Suzette', 'Mixing Bowl'),
	('Dolmades', 'Mixing Bowl'),
	('Eggplant Parmesan', 'Mixing Bowl'),
	('Falafel', 'Mixing Bowl'),
	('Fattoush', 'Mixing Bowl'),
	('Gazpacho', 'Mixing Bowl'),
	('Greek Salad', 'Mixing Bowl'),
	('Guacamole', 'Mixing Bowl'),
	('Gyoza', 'Mixing Bowl'),
	('Hummus', 'Mixing Bowl'),
	('Kimchi', 'Mixing Bowl'),
	('Kung Pao Chicken', 'Mixing Bowl'),
	('Kung Pao Shrimp', 'Mixing Bowl'),
	('Lasagna', 'Mixing Bowl'),
	('Mapo Tofu', 'Mixing Bowl'),
	('Margherita Pizza', 'Mixing Bowl'),
	('Miso Soup', 'Mixing Bowl'),
	('Pad Thai', 'Mixing Bowl'),
	('Paella', 'Mixing Bowl'),
	('Paneer Tikka', 'Mixing Bowl'),
	('Pão de Queijo', 'Mixing Bowl'),
	('Pasta Primavera', 'Mixing Bowl'),
	('Sashimi', 'Mixing Bowl'),
	('Spaghetti Carbonara', 'Mixing Bowl'),
	('Spanakopita', 'Mixing Bowl'),
	('Sushi Rolls', 'Mixing Bowl'),
	('Tabbouleh', 'Mixing Bowl'),
	('Tempura', 'Mixing Bowl'),
	('Tempura Vegetables', 'Mixing Bowl'),
	('Thai Green Curry', 'Mixing Bowl'),
	('Tiramisu', 'Mixing Bowl'),
	('Tofu Curry', 'Mixing Bowl'),
	('Vietnamese Spring Rolls', 'Mixing Bowl'),
	('Brigadeiro', 'Mixing Spoon'),
	('Caprese Pizza', 'Oven'),
	('Chiles en Nogada', 'Oven'),
	('Enchiladas', 'Oven'),
	('Margherita Pizza', 'Oven'),
	('Peking Duck', 'Oven'),
	('Spanakopita', 'Oven'),
	('Paella', 'Paella Pan'),
	('Apple Pie', 'Pie Pan'),
	('Bibimbap', 'Rice Cooker'),
	('Peking Duck', 'Roasting Pan'),
	('Apple Pie', 'Rolling Pin'),
	('Brigadeiro', 'Saucepan'),
	('Doro Wat', 'Saucepan'),
	('Hot and Sour Soup', 'Saucepan'),
	('Miso Soup', 'Saucepan'),
	('Palak Paneer', 'Saucepan'),
	('Pasta Primavera', 'Saucepan'),
	('Shakshuka', 'Saucepan'),
	('Spaghetti Carbonara', 'Saucepan'),
	('Thai Green Curry', 'Saucepan'),
	('Tofu Curry', 'Saucepan'),
	('Tom Kha Gai', 'Saucepan'),
	('Tom Yum Soup', 'Saucepan'),
	('Beef Stew', 'Serving Plate'),
	('Feijoada', 'Serving Plate'),
	('Sashimi', 'Serving Plate'),
	('Sashimi', 'Sharp Knife'),
	('Sushi Rolls', 'Sharp Knife'),
	('Pho', 'Soup Spoons'),
	('Butter Chicken', 'Spatula'),
	('Chicken Biryani', 'Spatula'),
	('Chicken Korma', 'Spatula'),
	('Chilaquiles', 'Spatula'),
	('Crepes Suzette', 'Spatula'),
	('Dolmades', 'Spatula'),
	('Gyoza', 'Spatula'),
	('Hummus', 'Spatula'),
	('Injera', 'Spatula'),
	('Kung Pao Chicken', 'Spatula'),
	('Kung Pao Shrimp', 'Spatula'),
	('Lasagna', 'Spatula'),
	('Mapo Tofu', 'Spatula'),
	('Pad Thai', 'Spatula'),
	('Paella', 'Spatula'),
	('Paneer Tikka', 'Spatula'),
	('Pasta Primavera', 'Spatula'),
	('Thai Green Curry', 'Spatula'),
	('Tofu Curry', 'Spatula'),
	('Pho', 'Stock Pot'),
	('Pho', 'Strainer'),
	('BBQ Ribs', 'Tongs'),
	('Bulgogi', 'Tongs'),
	('Tempura', 'Tongs'),
	('Tempura Vegetables', 'Tongs'),
	('Tiramisu', 'Whisk'),
	('Bibimbap', 'Wok'),
	('Kung Pao Chicken', 'Wok'),
	('Kung Pao Shrimp', 'Wok'),
	('Mapo Tofu', 'Wok'),
	('Pad Thai', 'Wok');

-- Dumping structure for πίνακας cooking.recipes_ingredients
CREATE TABLE IF NOT EXISTS `recipes_ingredients` (
  `recipe_name` varchar(50) NOT NULL,
  `ingredient_name` varchar(50) NOT NULL,
  `quantity_gr` int(11) DEFAULT NULL,
  `quantity_approx` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`recipe_name`,`ingredient_name`),
  KEY `ingredients_fk_1` (`ingredient_name`),
  CONSTRAINT `ingredients_fk_1` FOREIGN KEY (`ingredient_name`) REFERENCES `ingredients` (`ingredient_name`),
  CONSTRAINT `recipes_fk_3` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`),
  CONSTRAINT `check_either_not_null` CHECK (`quantity_gr` is not null and `quantity_approx` is null or `quantity_gr` is null and `quantity_approx` is not null)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.recipes_ingredients: ~280 rows (approximately)
INSERT INTO `recipes_ingredients` (`recipe_name`, `ingredient_name`, `quantity_gr`, `quantity_approx`) VALUES
	('Apple Pie', 'Apple', NULL, '5'),
	('Apple Pie', 'Apples', 500, NULL),
	('Apple Pie', 'Butter', 100, NULL),
	('Apple Pie', 'Flour', 200, NULL),
	('Apple Pie', 'Sugar', 150, NULL),
	('Banh Mi', 'Baguette', 200, NULL),
	('Banh Mi', 'Cilantro', 10, NULL),
	('Banh Mi', 'Pickled Carrots', 50, NULL),
	('Banh Mi', 'Pork', 150, NULL),
	('BBQ Ribs', 'BBQ Sauce', 200, NULL),
	('BBQ Ribs', 'Garlic Powder', 10, NULL),
	('BBQ Ribs', 'Onion Powder', 10, NULL),
	('BBQ Ribs', 'Pork Ribs', 1000, NULL),
	('Beef Bourguignon', 'Beef', 800, NULL),
	('Beef Bourguignon', 'Beef broth', NULL, '1 cup'),
	('Beef Bourguignon', 'Carrots', 100, NULL),
	('Beef Bourguignon', 'Red wine', 500, NULL),
	('Beef Stew', 'Beef', 800, NULL),
	('Beef Stew', 'Carrots', 200, NULL),
	('Beef Stew', 'Onions', 100, NULL),
	('Beef Stew', 'Potatoes', 300, NULL),
	('Bibimbap', 'Beef', 150, NULL),
	('Bibimbap', 'Carrot', 50, NULL),
	('Bibimbap', 'Rice', 200, NULL),
	('Bibimbap', 'Spinach', 50, NULL),
	('Brigadeiro', 'Butter', 30, NULL),
	('Brigadeiro', 'Chocolate Sprinkles', 100, NULL),
	('Brigadeiro', 'Cocoa Powder', 50, NULL),
	('Brigadeiro', 'Condensed Milk', 400, NULL),
	('Bulgogi', 'Beef', 500, NULL),
	('Bulgogi', 'Garlic', 20, NULL),
	('Bulgogi', 'Soy Sauce', 50, NULL),
	('Bulgogi', 'Sugar', 30, NULL),
	('Butter Chicken', 'Butter', 100, NULL),
	('Butter Chicken', 'Chicken', 600, NULL),
	('Butter Chicken', 'Cream', NULL, '1/2 cup'),
	('Butter Chicken', 'Garam masala', NULL, '1 teaspoon'),
	('Butter Chicken', 'Kashmiri chili powder', NULL, '1 teaspoon'),
	('Butter Chicken', 'Kasuri methi (dried fenugreek leaves)', NULL, '1 teaspoon'),
	('Caprese Pizza', 'Balsamic glaze', NULL, '2 tablespoons'),
	('Caprese Pizza', 'Basil leaves', NULL, '1/4 cup'),
	('Caprese Pizza', 'Pizza dough', 300, NULL),
	('Caprese Pizza', 'Tomatoes', 200, NULL),
	('Carbonnade Flamande', 'Beef', 800, NULL),
	('Carbonnade Flamande', 'Beer', 500, NULL),
	('Carbonnade Flamande', 'Brown sugar', NULL, '2 tablespoons'),
	('Carbonnade Flamande', 'Mustard', NULL, '1 tablespoon'),
	('Carbonnade Flamande', 'Onions', 200, NULL),
	('Carbonnade Flamande', 'Thyme', NULL, '1 tablespoon'),
	('Ceviche', 'Cilantro', NULL, '1/4 cup'),
	('Ceviche', 'Fish', 500, NULL),
	('Ceviche', 'Lime juice', 200, NULL),
	('Ceviche', 'Red onion', NULL, '1/2'),
	('Chicken Biryani', 'Basmati rice', 400, NULL),
	('Chicken Biryani', 'Chicken', 600, NULL),
	('Chicken Biryani', 'Garam masala', NULL, '1 tablespoon'),
	('Chicken Biryani', 'Yogurt', 100, NULL),
	('Chicken Korma', 'Cashews', NULL, '1/4 cup'),
	('Chicken Korma', 'Chicken', 600, NULL),
	('Chicken Korma', 'Ghee', NULL, '2 tablespoons'),
	('Chicken Korma', 'Yogurt', 200, NULL),
	('Chicken Tikka Masala', 'Chicken', 600, NULL),
	('Chicken Tikka Masala', 'Ginger garlic paste', NULL, '1 tablespoon'),
	('Chicken Tikka Masala', 'Tomato sauce', 500, NULL),
	('Chicken Tikka Masala', 'Yogurt', 100, NULL),
	('Chilaquiles', 'Cilantro', NULL, '1/4 cup'),
	('Chilaquiles', 'Cotija cheese', NULL, '1/4 cup'),
	('Chilaquiles', 'Salsa', 200, NULL),
	('Chilaquiles', 'Tortillas', 300, NULL),
	('Chiles en Nogada', 'Apple', NULL, '1 small'),
	('Chiles en Nogada', 'Poblano peppers', 600, NULL),
	('Chiles en Nogada', 'Pomegranate seeds', NULL, '1/4 cup'),
	('Chiles en Nogada', 'Walnuts', 100, NULL),
	('Coq au Vin', 'Carrots', 100, NULL),
	('Coq au Vin', 'Chicken', 1000, NULL),
	('Coq au Vin', 'Onion', 200, NULL),
	('Coq au Vin', 'Red wine', 500, NULL),
	('Crepes Suzette', 'Butter', NULL, '1/4 cup'),
	('Crepes Suzette', 'Flour', 300, NULL),
	('Crepes Suzette', 'Grand Marnier', NULL, '1/4 cup'),
	('Crepes Suzette', 'Oranges', 200, NULL),
	('Dolmades', 'Dill', NULL, '2 tablespoons'),
	('Dolmades', 'Grape leaves', 300, NULL),
	('Dolmades', 'Lemon juice', NULL, '2 tablespoons'),
	('Dolmades', 'Rice', 200, NULL),
	('Doro Wat', 'Berbere Spice', 30, NULL),
	('Doro Wat', 'Chicken', 1000, NULL),
	('Doro Wat', 'Garlic', 20, NULL),
	('Doro Wat', 'Onions', 200, NULL),
	('Eggplant Parmesan', 'Breadcrumbs', NULL, '1/4 cup'),
	('Eggplant Parmesan', 'Eggplant', 500, NULL),
	('Eggplant Parmesan', 'Mozzarella cheese', 100, NULL),
	('Eggplant Parmesan', 'Tomato sauce', 300, NULL),
	('Enchiladas', 'Black beans', NULL, '1/2 cup'),
	('Enchiladas', 'Black olives', 50, NULL),
	('Enchiladas', 'Cheese', 200, NULL),
	('Enchiladas', 'Enchilada sauce', NULL, '1 cup'),
	('Enchiladas', 'Green chilies', NULL, '2'),
	('Enchiladas', 'Tortillas', 300, NULL),
	('Falafel', 'Chickpeas', 400, NULL),
	('Falafel', 'Cilantro', 100, NULL),
	('Falafel', 'Cumin', NULL, '1 teaspoon'),
	('Falafel', 'Garlic', NULL, '3 cloves'),
	('Fattoush', 'Mixed greens', 300, NULL),
	('Fattoush', 'Pita chips', 100, NULL),
	('Fattoush', 'Radishes', NULL, '4'),
	('Fattoush', 'Sumac', NULL, '1 teaspoon'),
	('Feijoada', 'Black Beans', 500, NULL),
	('Feijoada', 'Chorizo', 200, NULL),
	('Feijoada', 'Garlic', 20, NULL),
	('Feijoada', 'Pork', 400, NULL),
	('Gazpacho', 'Cucumber', 200, NULL),
	('Gazpacho', 'Red bell pepper', 100, NULL),
	('Gazpacho', 'Red onion', NULL, '1/2'),
	('Gazpacho', 'Tomato', 300, NULL),
	('Greek Salad', 'Cucumber', 200, NULL),
	('Greek Salad', 'Feta cheese', 100, NULL),
	('Greek Salad', 'Kalamata olives', 50, NULL),
	('Greek Salad', 'Tomato', 300, NULL),
	('Guacamole', 'Avocado', 400, NULL),
	('Guacamole', 'Lime juice', NULL, '1 lime'),
	('Guacamole', 'Red onion', NULL, 'half'),
	('Guacamole', 'Tomato', 200, NULL),
	('Gyoza', 'Cabbage', 200, NULL),
	('Gyoza', 'Pork', 400, NULL),
	('Gyoza', 'Sesame oil', NULL, '1 teaspoon'),
	('Gyoza', 'Soy sauce', NULL, '1/4 cup'),
	('Hot and Sour Soup', 'Black vinegar', NULL, '2 tablespoons'),
	('Hot and Sour Soup', 'Mushrooms', 200, NULL),
	('Hot and Sour Soup', 'Tofu', 300, NULL),
	('Hot and Sour Soup', 'White pepper', NULL, '1 teaspoon'),
	('Hummus', 'Chickpeas', 400, NULL),
	('Hummus', 'Garlic', NULL, '2 cloves'),
	('Hummus', 'Lemon juice', 50, NULL),
	('Hummus', 'Tahini', 100, NULL),
	('Injera', 'Salt', 10, NULL),
	('Injera', 'Teff Flour', 300, NULL),
	('Injera', 'Water', 200, NULL),
	('Injera', 'Yeast', 5, NULL),
	('Kimchi', 'Cabbage', NULL, '1'),
	('Kimchi', 'Garlic', 20, NULL),
	('Kimchi', 'Gochugaru', 30, NULL),
	('Kimchi', 'Napa Cabbage', 1000, NULL),
	('Kimchi', 'Salt', 50, NULL),
	('Kitfo', 'Beef', 500, NULL),
	('Kitfo', 'Clarified Butter', 100, NULL),
	('Kitfo', 'Mitmita Spice', 10, NULL),
	('Kitfo', 'Salt', 10, NULL),
	('Kung Pao Chicken', 'Bell peppers', 150, NULL),
	('Kung Pao Chicken', 'Chicken', 500, NULL),
	('Kung Pao Chicken', 'Green onions', NULL, '2 stalks'),
	('Kung Pao Chicken', 'Peanuts', 100, NULL),
	('Kung Pao Shrimp', 'Bell peppers', 200, NULL),
	('Kung Pao Shrimp', 'Ginger', NULL, '1 inch piece'),
	('Kung Pao Shrimp', 'Green onions', NULL, '2 stalks'),
	('Kung Pao Shrimp', 'Shrimp', 400, NULL),
	('Lamb Tagine', 'Bell Peppers', 100, NULL),
	('Lamb Tagine', 'Cumin', 5, NULL),
	('Lamb Tagine', 'Garlic', 20, NULL),
	('Lamb Tagine', 'Lamb', 1000, NULL),
	('Lamb Tagine', 'Olive Oil', 30, NULL),
	('Lamb Tagine', 'Onion', 150, NULL),
	('Lamb Tagine', 'Paprika', 5, NULL),
	('Lamb Tagine', 'Tomato', 200, NULL),
	('Lamb Tagine', 'Turmeric', 3, NULL),
	('Lasagna', 'Ground beef', 500, NULL),
	('Lasagna', 'Pasta', 400, NULL),
	('Lasagna', 'Ricotta cheese', 200, NULL),
	('Lasagna', 'Tomato sauce', 200, NULL),
	('Mapo Tofu', 'Green onions', NULL, '2 stalks'),
	('Mapo Tofu', 'Ground pork', 300, NULL),
	('Mapo Tofu', 'Sichuan peppercorns', NULL, 'a few'),
	('Mapo Tofu', 'Tofu', 500, NULL),
	('Margherita Pizza', 'Fresh basil', 50, NULL),
	('Margherita Pizza', 'Mozzarella cheese', 200, NULL),
	('Margherita Pizza', 'Pizza dough', 300, NULL),
	('Margherita Pizza', 'Tomatoes', 100, NULL),
	('Miso Soup', 'Bonito flakes', NULL, 'a few'),
	('Miso Soup', 'Green onions', NULL, '2 stalks'),
	('Miso Soup', 'Mirin', NULL, '2 tablespoons'),
	('Miso Soup', 'Seaweed', 100, NULL),
	('Miso Soup', 'Silken tofu', NULL, '1 block'),
	('Miso Soup', 'Tofu', 300, NULL),
	('Moussaka', 'Eggplant', 500, NULL),
	('Moussaka', 'Ground lamb', 400, NULL),
	('Moussaka', 'Potatoes', 200, NULL),
	('Moussaka', 'Tomatoes', 200, NULL),
	('Osso Buco', 'Carrots', 100, NULL),
	('Osso Buco', 'Celery', 100, NULL),
	('Osso Buco', 'Veal', 1000, NULL),
	('Osso Buco', 'Veal shanks', 800, NULL),
	('Osso Buco', 'White wine', 500, NULL),
	('Pad Thai', 'Bean sprouts', 100, NULL),
	('Pad Thai', 'Noodles', 300, NULL),
	('Pad Thai', 'Shrimp', 400, NULL),
	('Pad Thai', 'Tamarind paste', NULL, '1 tablespoon'),
	('Paella', 'Bell peppers', 150, NULL),
	('Paella', 'Chicken', 600, NULL),
	('Paella', 'Rice', 400, NULL),
	('Paella', 'Saffron', NULL, 'a pinch'),
	('Palak Paneer', 'Garlic', NULL, '3 cloves'),
	('Palak Paneer', 'Ginger', NULL, '1 inch piece'),
	('Palak Paneer', 'Paneer cheese', 300, NULL),
	('Palak Paneer', 'Spinach', 500, NULL),
	('Paneer Tikka', 'Lemon juice', NULL, '1 lemon'),
	('Paneer Tikka', 'Paneer', 500, NULL),
	('Paneer Tikka', 'Paneer cheese', 300, NULL),
	('Paneer Tikka', 'Tandoori masala', NULL, '2 tablespoons'),
	('Paneer Tikka', 'Yogurt', 200, NULL),
	('Pão de Queijo', 'Cheese', 500, NULL),
	('Pão de Queijo', 'Eggs', NULL, '2'),
	('Pão de Queijo', 'Milk', 200, NULL),
	('Pão de Queijo', 'Parmesan Cheese', 100, NULL),
	('Pão de Queijo', 'Tapioca Flour', 250, NULL),
	('Pasta Primavera', 'Heavy cream', NULL, '1/2 cup'),
	('Pasta Primavera', 'Mixed vegetables', 200, NULL),
	('Pasta Primavera', 'Parmesan cheese', NULL, '1/4 cup'),
	('Pasta Primavera', 'Pasta', 300, NULL),
	('Peking Duck', 'Cucumber', NULL, '1/2'),
	('Peking Duck', 'Duck', 1000, NULL),
	('Peking Duck', 'Green onions', NULL, '2 stalks'),
	('Peking Duck', 'Hoisin sauce', 200, NULL),
	('Pho', 'Beef', 500, NULL),
	('Pho', 'Cinnamon Stick', 5, NULL),
	('Pho', 'Ginger', 50, NULL),
	('Pho', 'Rice Noodles', 200, NULL),
	('Ratatouille', 'Bell peppers', 100, NULL),
	('Ratatouille', 'Eggplant', 300, NULL),
	('Ratatouille', 'Tomatoes', 100, NULL),
	('Ratatouille', 'Vegetables', NULL, 'a lot of'),
	('Ratatouille', 'Zucchini', 300, NULL),
	('Sashimi', 'Fish', 500, NULL),
	('Sashimi', 'Pickled ginger', NULL, '1 tablespoon'),
	('Sashimi', 'Soy sauce', 100, NULL),
	('Sashimi', 'Wasabi', NULL, '1 teaspoon'),
	('Shakshuka', 'Egg', 4, NULL),
	('Shakshuka', 'Garlic', 20, NULL),
	('Shakshuka', 'Olive Oil', 30, NULL),
	('Shakshuka', 'Onion', 100, NULL),
	('Shakshuka', 'Tomato', 400, NULL),
	('Spaghetti Carbonara', 'Bacon', 100, NULL),
	('Spaghetti Carbonara', 'Egg', NULL, '3'),
	('Spaghetti Carbonara', 'Parmesan cheese', 50, NULL),
	('Spaghetti Carbonara', 'Spaghetti', 200, NULL),
	('Spanakopita', 'Dill', NULL, '2 tablespoons'),
	('Spanakopita', 'Feta cheese', 200, NULL),
	('Spanakopita', 'Nutmeg', NULL, '1 teaspoon'),
	('Spanakopita', 'Onion', 100, NULL),
	('Spanakopita', 'Phyllo dough', 200, NULL),
	('Spanakopita', 'Spinach', 500, NULL),
	('Spring Rolls', 'Mint', 10, NULL),
	('Spring Rolls', 'Rice Paper', 100, NULL),
	('Spring Rolls', 'Shrimp', 150, NULL),
	('Spring Rolls', 'Vermicelli Noodles', 50, NULL),
	('Sushi Rolls', 'Avocado', 100, NULL),
	('Sushi Rolls', 'Cucumber', 50, NULL),
	('Sushi Rolls', 'Nori (seaweed)', NULL, '100 sheets'),
	('Sushi Rolls', 'Rice', 300, NULL),
	('Tabbouleh', 'Bulgur wheat', 200, NULL),
	('Tabbouleh', 'Mint leaves', NULL, '1/4 cup'),
	('Tabbouleh', 'Parsley', 300, NULL),
	('Tabbouleh', 'Tomatoes', 100, NULL),
	('Tacos al Pastor', 'Cilantro', 50, NULL),
	('Tacos al Pastor', 'Onion', NULL, '1 small'),
	('Tacos al Pastor', 'Pineapple', 200, NULL),
	('Tacos al Pastor', 'Pork', 800, NULL),
	('Tempura', 'Seafood', 500, NULL),
	('Tempura', 'Soy sauce', NULL, '1/4 cup'),
	('Tempura', 'Tempura batter', 100, NULL),
	('Tempura', 'Vegetables', 300, NULL),
	('Tempura Vegetables', 'Rice vinegar', NULL, '2 tablespoons'),
	('Tempura Vegetables', 'Soy sauce', NULL, '1/4 cup'),
	('Tempura Vegetables', 'Tempura batter', 100, NULL),
	('Tempura Vegetables', 'Vegetables', 400, NULL),
	('Thai Green Curry', 'Chicken', 600, NULL),
	('Thai Green Curry', 'Coconut milk', 400, NULL),
	('Thai Green Curry', 'Green curry paste', NULL, '2 tablespoons'),
	('Thai Green Curry', 'Thai basil', NULL, '1/4 cup'),
	('Tiramisu', 'Cocoa powder', NULL, '2 tablespoons'),
	('Tiramisu', 'Espresso', NULL, '1/4 cup'),
	('Tiramisu', 'Ladyfingers', 300, NULL),
	('Tiramisu', 'Marsala wine', NULL, '1/4 cup'),
	('Tiramisu', 'Mascarpone cheese', 200, NULL),
	('Tiramisu', 'Milk', NULL, '1/2 cup'),
	('Tofu Curry', 'Coconut milk', 200, NULL),
	('Tofu Curry', 'Curry powder', NULL, '2 tablespoons'),
	('Tofu Curry', 'Red bell pepper', 100, NULL),
	('Tofu Curry', 'Tofu', 400, NULL),
	('Tom Kha Gai', 'Chicken', 600, NULL),
	('Tom Kha Gai', 'Coconut milk', 400, NULL),
	('Tom Kha Gai', 'Galangal', NULL, '2 slices'),
	('Tom Kha Gai', 'Kaffir lime leaves', 10, NULL),
	('Tom Yum Soup', 'Lemongrass', 50, NULL),
	('Tom Yum Soup', 'Mushrooms', 100, NULL),
	('Tom Yum Soup', 'Shrimp', 400, NULL),
	('Tom Yum Soup', 'Thai chilies', 10, NULL),
	('Tortilla Española', 'Bell Peppers', 100, NULL),
	('Tortilla Española', 'Egg', 300, NULL),
	('Tortilla Española', 'Olive Oil', 30, NULL),
	('Tortilla Española', 'Onion', 100, NULL),
	('Tortilla Española', 'Potato', 300, NULL),
	('Vietnamese Spring Rolls', 'Mint leaves', NULL, '1/4 cup'),
	('Vietnamese Spring Rolls', 'Rice paper', NULL, '20 sheets'),
	('Vietnamese Spring Rolls', 'Rice vermicelli', 200, NULL),
	('Vietnamese Spring Rolls', 'Shrimp', 400, NULL);

-- Dumping structure for πίνακας cooking.recipe_specialization
CREATE TABLE IF NOT EXISTS `recipe_specialization` (
  `recipe_name` varchar(30) NOT NULL,
  `cook_id` int(11) NOT NULL,
  PRIMARY KEY (`recipe_name`,`cook_id`),
  KEY `cook_fk2` (`cook_id`),
  CONSTRAINT `cook_fk2` FOREIGN KEY (`cook_id`) REFERENCES `cook` (`cook_id`),
  CONSTRAINT `recipe_fk4` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.recipe_specialization: ~0 rows (approximately)

-- Dumping structure for πίνακας cooking.steps
CREATE TABLE IF NOT EXISTS `steps` (
  `step_id` int(11) NOT NULL AUTO_INCREMENT,
  `step_description` varchar(50) NOT NULL,
  `step_number` int(11) NOT NULL,
  `recipe_name` varchar(50) NOT NULL,
  PRIMARY KEY (`step_id`),
  KEY `recipes_fk_2` (`recipe_name`),
  CONSTRAINT `recipes_fk_2` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.steps: ~218 rows (approximately)
INSERT INTO `steps` (`step_id`, `step_description`, `step_number`, `recipe_name`) VALUES
	(1, 'Cook pasta and bacon', 1, 'Spaghetti Carbonara'),
	(2, 'Mix eggs and cheese', 2, 'Spaghetti Carbonara'),
	(3, 'Combine with pasta and serve', 3, 'Spaghetti Carbonara'),
	(4, 'Marinate chicken in wine', 1, 'Coq au Vin'),
	(5, 'Sauté bacon and vegetables', 2, 'Coq au Vin'),
	(6, 'Simmer chicken in sauce', 3, 'Coq au Vin'),
	(7, 'Marinate chicken and stir-fry', 1, 'Kung Pao Chicken'),
	(8, 'Add vegetables and peanuts', 2, 'Kung Pao Chicken'),
	(9, 'Thicken sauce and serve', 3, 'Kung Pao Chicken'),
	(10, 'Marinate chicken in yogurt and spices', 1, 'Chicken Tikka Masala'),
	(11, 'Grill chicken and simmer in sauce', 2, 'Chicken Tikka Masala'),
	(12, 'Serve with rice and naan', 3, 'Chicken Tikka Masala'),
	(13, 'Marinate pork in adobo sauce', 1, 'Tacos al Pastor'),
	(14, 'Slice pineapple and grill with pork', 2, 'Tacos al Pastor'),
	(15, 'Assemble tacos with toppings', 3, 'Tacos al Pastor'),
	(16, 'Prepare sushi rice and ingredients', 1, 'Sushi Rolls'),
	(17, 'Roll ingredients in nori and rice', 2, 'Sushi Rolls'),
	(18, 'Slice and serve with soy sauce', 3, 'Sushi Rolls'),
	(19, 'Boil broth with lemongrass and galangal', 1, 'Tom Yum Soup'),
	(20, 'Add shrimp and mushrooms', 2, 'Tom Yum Soup'),
	(21, 'Season with lime juice and chili', 3, 'Tom Yum Soup'),
	(22, 'Chop vegetables and olives', 1, 'Greek Salad'),
	(23, 'Toss with feta cheese and dressing', 2, 'Greek Salad'),
	(24, 'Serve with crusty bread', 3, 'Greek Salad'),
	(25, 'Sauté onions, garlic, and peppers', 1, 'Paella'),
	(26, 'Add rice, broth, and saffron', 2, 'Paella'),
	(27, 'Simmer with seafood and chorizo', 3, 'Paella'),
	(28, 'Blend chickpeas, tahini, and garlic', 1, 'Hummus'),
	(29, 'Drizzle with olive oil and paprika', 2, 'Hummus'),
	(30, 'Serve with pita bread and vegetables', 3, 'Hummus'),
	(31, 'Stretch pizza dough and spread sauce', 1, 'Margherita Pizza'),
	(32, 'Layer with cheese and tomato slices', 2, 'Margherita Pizza'),
	(33, 'Bake until crust is golden', 3, 'Margherita Pizza'),
	(34, 'Sauté bacon and beef', 1, 'Beef Bourguignon'),
	(35, 'Add onions, carrots, and wine', 2, 'Beef Bourguignon'),
	(36, 'Simmer until beef is tender', 3, 'Beef Bourguignon'),
	(37, 'Brown minced meat and tofu', 1, 'Mapo Tofu'),
	(38, 'Add spicy bean paste and sauce', 2, 'Mapo Tofu'),
	(39, 'Simmer until flavors meld', 3, 'Mapo Tofu'),
	(40, 'Marinate chicken and cook rice', 1, 'Chicken Biryani'),
	(41, 'Layer chicken and rice with spices', 2, 'Chicken Biryani'),
	(42, 'Steam until rice is cooked', 3, 'Chicken Biryani'),
	(43, 'Mash avocados and mix with tomatoes', 1, 'Guacamole'),
	(44, 'Season with lime juice and salt', 2, 'Guacamole'),
	(45, 'Serve with tortilla chips', 3, 'Guacamole'),
	(46, 'Prepare batter and heat oil', 1, 'Tempura'),
	(47, 'Dip seafood and vegetables', 2, 'Tempura'),
	(48, 'Fry until golden and crispy', 3, 'Tempura'),
	(49, 'Soak noodles and prepare sauce', 1, 'Pad Thai'),
	(50, 'Stir-fry noodles with tofu and shrimp', 2, 'Pad Thai'),
	(51, 'Toss with bean sprouts and peanuts', 3, 'Pad Thai'),
	(52, 'Slice and salt eggplant', 1, 'Moussaka'),
	(53, 'Layer with meat sauce and potatoes', 2, 'Moussaka'),
	(54, 'Top with bechamel sauce and bake', 3, 'Moussaka'),
	(55, 'Blend tomatoes, peppers, and cucumbers', 1, 'Gazpacho'),
	(56, 'Season with olive oil and vinegar', 2, 'Gazpacho'),
	(57, 'Chill before serving', 3, 'Gazpacho'),
	(58, 'Blend chickpeas, herbs, and spices', 1, 'Falafel'),
	(59, 'Form mixture into balls and fry', 2, 'Falafel'),
	(60, 'Serve with tahini sauce and pita', 3, 'Falafel'),
	(61, 'Cook pasta and prepare sauce', 1, 'Lasagna'),
	(62, 'Layer pasta, sauce, and cheese', 2, 'Lasagna'),
	(63, 'Bake until bubbly and golden', 3, 'Lasagna'),
	(64, 'Sauté onions, garlic, and eggplant', 1, 'Ratatouille'),
	(65, 'Add zucchini, peppers, and tomatoes', 2, 'Ratatouille'),
	(66, 'Simmer until vegetables are tender', 3, 'Ratatouille'),
	(67, 'Marinate duck and roast', 1, 'Peking Duck'),
	(68, 'Serve with pancakes, sauce, and scallions', 2, 'Peking Duck'),
	(69, 'Blanch spinach and purée', 1, 'Palak Paneer'),
	(70, 'Sauté paneer and spices', 2, 'Palak Paneer'),
	(71, 'Simmer in spinach sauce', 3, 'Palak Paneer'),
	(72, 'Roast peppers and prepare filling', 1, 'Chiles en Nogada'),
	(73, 'Stuff peppers and top with sauce', 2, 'Chiles en Nogada'),
	(74, 'Garnish with pomegranate seeds', 3, 'Chiles en Nogada'),
	(75, 'Slice fish and arrange on plate', 1, 'Sashimi'),
	(76, 'Serve with soy sauce, wasabi, and ginger', 2, 'Sashimi'),
	(77, 'Simmer broth with lemongrass and galangal', 1, 'Tom Kha Gai'),
	(78, 'Add chicken, mushrooms, and coconut milk', 2, 'Tom Kha Gai'),
	(79, 'Season with lime juice and chili', 3, 'Tom Kha Gai'),
	(80, 'Blanch grape leaves and prepare filling', 1, 'Dolmades'),
	(81, 'Roll grape leaves with filling', 2, 'Dolmades'),
	(82, 'Simmer in lemon juice and oil', 3, 'Dolmades'),
	(83, 'Toast pita bread and chop vegetables', 1, 'Fattoush'),
	(84, 'Toss with salad dressing and herbs', 2, 'Fattoush'),
	(85, 'Garnish with pita chips and serve', 3, 'Fattoush'),
	(86, 'Sauté onions and beef', 1, 'Carbonnade Flamande'),
	(87, 'Add beer, broth, and seasonings', 2, 'Carbonnade Flamande'),
	(88, 'Simmer until beef is tender', 3, 'Carbonnade Flamande'),
	(89, 'Brew strong coffee and prepare cream', 1, 'Tiramisu'),
	(90, 'Soak ladyfingers in coffee and layer with cream', 2, 'Tiramisu'),
	(91, 'Chill before serving', 3, 'Tiramisu'),
	(92, 'Prepare crepe batter and cook crepes', 1, 'Crepes Suzette'),
	(93, 'Prepare sauce with orange juice and zest', 2, 'Crepes Suzette'),
	(94, 'Fold crepes and flambe with Grand Marnier', 3, 'Crepes Suzette'),
	(95, 'Marinate shrimp and stir-fry', 1, 'Kung Pao Shrimp'),
	(96, 'Add vegetables and peanuts', 2, 'Kung Pao Shrimp'),
	(97, 'Thicken sauce and serve', 3, 'Kung Pao Shrimp'),
	(98, 'Marinate chicken in yogurt and spices', 1, 'Butter Chicken'),
	(99, 'Simmer chicken in tomato sauce and cream', 2, 'Butter Chicken'),
	(100, 'Serve with rice and naan', 3, 'Butter Chicken'),
	(101, 'Prepare sauce and filling', 1, 'Enchiladas'),
	(102, 'Roll tortillas with filling and place in dish', 2, 'Enchiladas'),
	(103, 'Top with sauce and cheese and bake', 3, 'Enchiladas'),
	(104, 'Prepare batter and heat oil', 1, 'Tempura Vegetables'),
	(105, 'Dip vegetables in batter and fry', 2, 'Tempura Vegetables'),
	(106, 'Serve with dipping sauce', 3, 'Tempura Vegetables'),
	(107, 'Prepare curry paste and simmer with coconut milk', 1, 'Thai Green Curry'),
	(108, 'Add chicken and vegetables', 2, 'Thai Green Curry'),
	(109, 'Serve with rice', 3, 'Thai Green Curry'),
	(110, 'Prepare filling and phyllo pastry', 1, 'Spanakopita'),
	(111, 'Layer phyllo with filling and bake', 2, 'Spanakopita'),
	(112, 'Serve warm or at room temperature', 3, 'Spanakopita'),
	(113, 'Soak bulgur wheat and chop vegetables', 1, 'Tabbouleh'),
	(114, 'Mix with lemon juice, oil, and herbs', 2, 'Tabbouleh'),
	(115, 'Chill before serving', 3, 'Tabbouleh'),
	(116, 'Sear veal shanks and sauté vegetables', 1, 'Osso Buco'),
	(117, 'Add tomatoes, broth, and wine', 2, 'Osso Buco'),
	(118, 'Braise until veal is tender', 3, 'Osso Buco'),
	(119, 'Prepare broth and slice ingredients', 1, 'Hot and Sour Soup'),
	(120, 'Simmer with mushrooms, tofu, and seasonings', 2, 'Hot and Sour Soup'),
	(121, 'Garnish with green onions and serve', 3, 'Hot and Sour Soup'),
	(122, 'Marinate paneer and vegetables', 1, 'Paneer Tikka'),
	(123, 'Grill skewers until charred', 2, 'Paneer Tikka'),
	(124, 'Serve with chutney and naan', 3, 'Paneer Tikka'),
	(125, 'Prepare sauce and toppings', 1, 'Chilaquiles'),
	(126, 'Layer tortilla chips with sauce and cheese', 2, 'Chilaquiles'),
	(127, 'Bake until cheese is melted', 3, 'Chilaquiles'),
	(128, 'Prepare broth and add tofu and seaweed', 1, 'Miso Soup'),
	(129, 'Simmer until flavors meld', 2, 'Miso Soup'),
	(130, 'Serve hot with green onions', 3, 'Miso Soup'),
	(131, 'Marinate fish in citrus juices', 1, 'Ceviche'),
	(132, 'Add vegetables and seasonings', 2, 'Ceviche'),
	(133, 'Chill until fish is opaque', 3, 'Ceviche'),
	(134, 'Slice and salt eggplant', 1, 'Eggplant Parmesan'),
	(135, 'Layer with sauce, cheese, and repeat', 2, 'Eggplant Parmesan'),
	(136, 'Bake until cheese is bubbly and golden', 3, 'Eggplant Parmesan'),
	(137, 'Soak vermicelli noodles and prepare fillings', 1, 'Vietnamese Spring Rolls'),
	(138, 'Roll fillings in rice paper and serve', 2, 'Vietnamese Spring Rolls'),
	(139, 'Prepare sauce and marinate chicken', 1, 'Chicken Korma'),
	(140, 'Simmer chicken in sauce until cooked', 2, 'Chicken Korma'),
	(141, 'Garnish with nuts and serve with rice', 3, 'Chicken Korma'),
	(142, 'Stretch pizza dough and spread sauce', 1, 'Caprese Pizza'),
	(143, 'Layer with cheese and tomato slices', 2, 'Caprese Pizza'),
	(144, 'Bake until crust is golden', 3, 'Caprese Pizza'),
	(145, 'Prepare filling and wrappers', 1, 'Gyoza'),
	(146, 'Fill wrappers with filling and fold', 2, 'Gyoza'),
	(147, 'Pan-fry until crispy and serve with dipping sauce', 3, 'Gyoza'),
	(148, 'Cook pasta and blanch vegetables', 1, 'Pasta Primavera'),
	(149, 'Toss with sauce and Parmesan cheese', 2, 'Pasta Primavera'),
	(150, 'Garnish with fresh herbs', 3, 'Pasta Primavera'),
	(151, 'Marinate tofu and vegetables', 1, 'Tofu Curry'),
	(152, 'Simmer in coconut milk and spices', 2, 'Tofu Curry'),
	(153, 'Serve with rice and garnish with cilantro', 3, 'Tofu Curry'),
	(154, 'Soak rice noodles for 20 minutes.', 1, 'Pho'),
	(155, 'Boil noodles for 2 minutes.', 2, 'Pho'),
	(156, 'Serve hot with toppings.', 3, 'Pho'),
	(157, 'Spread mayo and pate on baguette.', 1, 'Banh Mi'),
	(158, 'Layer with ingredients.', 2, 'Banh Mi'),
	(159, 'Slice and serve.', 3, 'Banh Mi'),
	(160, 'Soak rice paper in water.', 1, 'Spring Rolls'),
	(161, 'Fill and roll.', 2, 'Spring Rolls'),
	(162, 'Repeat with remaining ingredients.', 3, 'Spring Rolls'),
	(163, 'Cook beans with pork.', 1, 'Feijoada'),
	(164, 'Serve hot.', 2, 'Feijoada'),
	(165, 'Mix tapioca flour, milk, cheese, and eggs.', 1, 'Pão de Queijo'),
	(166, 'Bake until golden.', 2, 'Pão de Queijo'),
	(167, 'Serve warm.', 3, 'Pão de Queijo'),
	(168, 'Mix condensed milk, cocoa, and butter in pan.', 1, 'Brigadeiro'),
	(169, 'Cook until thickened.', 2, 'Brigadeiro'),
	(170, 'Roll in sprinkles.', 3, 'Brigadeiro'),
	(171, 'Mix cabbage, salt, and spices.', 1, 'Kimchi'),
	(172, 'Ferment for few days.', 2, 'Kimchi'),
	(173, 'Serve chilled.', 3, 'Kimchi'),
	(174, 'Cook rice.', 1, 'Bibimbap'),
	(175, 'Top with beef and veggies.', 2, 'Bibimbap'),
	(176, 'Serve with sauce.', 3, 'Bibimbap'),
	(177, 'Marinate beef.', 1, 'Bulgogi'),
	(178, 'Grill until cooked.', 2, 'Bulgogi'),
	(179, 'Serve hot.', 3, 'Bulgogi'),
	(180, 'Simmer chicken in spices.', 1, 'Doro Wat'),
	(181, 'Serve with injera.', 2, 'Doro Wat'),
	(182, 'Mix teff flour, water, and yeast.', 1, 'Injera'),
	(183, 'Cook on griddle.', 2, 'Injera'),
	(184, 'Season beef.', 1, 'Kitfo'),
	(185, 'Serve with butter.', 2, 'Kitfo'),
	(217, 'Peel and core apples', 1, 'Apple Pie'),
	(218, 'Prepare pie crust', 2, 'Apple Pie'),
	(219, 'Mix apples with sugar and spices', 3, 'Apple Pie'),
	(220, 'Fill pie crust with apple mixture', 4, 'Apple Pie'),
	(221, 'Top pie with second crust and vent', 5, 'Apple Pie'),
	(222, 'Bake pie until golden brown', 6, 'Apple Pie'),
	(223, 'Serve pie with ice cream', 7, 'Apple Pie'),
	(224, 'Prepare ingredients: beef, vegetables, broth', 1, 'Beef Stew'),
	(225, 'Brown beef in pot', 2, 'Beef Stew'),
	(226, 'Add vegetables and broth to pot', 3, 'Beef Stew'),
	(227, 'Simmer stew until beef is tender', 4, 'Beef Stew'),
	(228, 'Season stew with salt and pepper', 5, 'Beef Stew'),
	(229, 'Serve stew hot', 6, 'Beef Stew'),
	(230, 'Prepare ingredients: lamb, spices, vegetables', 1, 'Lamb Tagine'),
	(231, 'Brown lamb in tagine', 2, 'Lamb Tagine'),
	(232, 'Add spices and vegetables to tagine', 3, 'Lamb Tagine'),
	(233, 'Cover and simmer tagine until lamb is tender', 4, 'Lamb Tagine'),
	(234, 'Serve tagine with couscous', 5, 'Lamb Tagine'),
	(235, 'Marinate ribs in BBQ sauce', 1, 'BBQ Ribs'),
	(236, 'Grill ribs over medium heat', 2, 'BBQ Ribs'),
	(237, 'Baste ribs with BBQ sauce while grilling', 3, 'BBQ Ribs'),
	(238, 'Serve ribs hot with additional BBQ sauce', 4, 'BBQ Ribs'),
	(239, 'Slice potatoes and onions', 1, 'Tortilla Española'),
	(240, 'Fry potatoes and onions in pan', 2, 'Tortilla Española'),
	(241, 'Add beaten eggs to pan', 3, 'Tortilla Española'),
	(242, 'Cook until eggs are set', 4, 'Tortilla Española'),
	(243, 'Flip tortilla to cook other side', 5, 'Tortilla Española'),
	(244, 'Serve tortilla warm or at room temperature', 6, 'Tortilla Española'),
	(245, 'Chop tomatoes, onions, and peppers', 1, 'Shakshuka'),
	(246, 'Saute vegetables in pan with olive oil', 2, 'Shakshuka'),
	(247, 'Add spices and tomato sauce to pan', 3, 'Shakshuka'),
	(248, 'Crack eggs into pan and simmer until set', 4, 'Shakshuka'),
	(249, 'Garnish with herbs and serve hot', 5, 'Shakshuka');

-- Dumping structure for πίνακας cooking.tags
CREATE TABLE IF NOT EXISTS `tags` (
  `tag_name` varchar(30) NOT NULL,
  PRIMARY KEY (`tag_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.tags: ~14 rows (approximately)
INSERT INTO `tags` (`tag_name`) VALUES
	('brunch'),
	('classic'),
	('comfort food'),
	('cool dish'),
	('dessert'),
	('dinner party'),
	('easy'),
	('family meal'),
	('gluten-free'),
	('healthy'),
	('quick-lunch'),
	('seafood'),
	('spicy'),
	('vegetarian');

-- Dumping structure for πίνακας cooking.tag_recipe
CREATE TABLE IF NOT EXISTS `tag_recipe` (
  `recipe_name` varchar(50) NOT NULL,
  `tag_name` varchar(30) NOT NULL,
  KEY `recipe_name` (`recipe_name`),
  KEY `tag_name` (`tag_name`),
  CONSTRAINT `tag_recipe_ibfk_1` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`),
  CONSTRAINT `tag_recipe_ibfk_2` FOREIGN KEY (`tag_name`) REFERENCES `tags` (`tag_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.tag_recipe: ~192 rows (approximately)
INSERT INTO `tag_recipe` (`recipe_name`, `tag_name`) VALUES
	('Spaghetti Carbonara', 'classic'),
	('Spaghetti Carbonara', 'comfort food'),
	('Spaghetti Carbonara', 'family meal'),
	('Coq au Vin', 'classic'),
	('Coq au Vin', 'dinner party'),
	('Coq au Vin', 'family meal'),
	('Kung Pao Chicken', 'spicy'),
	('Kung Pao Chicken', 'quick-lunch'),
	('Kung Pao Chicken', 'family meal'),
	('Chicken Tikka Masala', 'spicy'),
	('Chicken Tikka Masala', 'classic'),
	('Chicken Tikka Masala', 'comfort food'),
	('Tacos al Pastor', 'spicy'),
	('Tacos al Pastor', 'quick-lunch'),
	('Tacos al Pastor', 'family meal'),
	('Sushi Rolls', 'cool dish'),
	('Sushi Rolls', 'seafood'),
	('Sushi Rolls', 'brunch'),
	('Tom Yum Soup', 'spicy'),
	('Tom Yum Soup', 'seafood'),
	('Tom Yum Soup', 'healthy'),
	('Greek Salad', 'healthy'),
	('Greek Salad', 'cool dish'),
	('Greek Salad', 'vegetarian'),
	('Paella', 'classic'),
	('Paella', 'seafood'),
	('Paella', 'dinner party'),
	('Hummus', 'healthy'),
	('Hummus', 'cool dish'),
	('Hummus', 'vegetarian'),
	('Margherita Pizza', 'classic'),
	('Margherita Pizza', 'vegetarian'),
	('Margherita Pizza', 'family meal'),
	('Beef Bourguignon', 'classic'),
	('Beef Bourguignon', 'dinner party'),
	('Beef Bourguignon', 'comfort food'),
	('Mapo Tofu', 'spicy'),
	('Mapo Tofu', 'quick-lunch'),
	('Mapo Tofu', 'vegetarian'),
	('Chicken Biryani', 'spicy'),
	('Chicken Biryani', 'classic'),
	('Chicken Biryani', 'family meal'),
	('Guacamole', 'healthy'),
	('Guacamole', 'cool dish'),
	('Guacamole', 'brunch'),
	('Tempura', 'quick-lunch'),
	('Tempura', 'seafood'),
	('Tempura', 'family meal'),
	('Pad Thai', 'spicy'),
	('Pad Thai', 'quick-lunch'),
	('Pad Thai', 'classic'),
	('Moussaka', 'comfort food'),
	('Moussaka', 'family meal'),
	('Moussaka', 'classic'),
	('Gazpacho', 'cool dish'),
	('Gazpacho', 'healthy'),
	('Gazpacho', 'vegetarian'),
	('Falafel', 'vegetarian'),
	('Falafel', 'healthy'),
	('Falafel', 'quick-lunch'),
	('Lasagna', 'classic'),
	('Lasagna', 'comfort food'),
	('Lasagna', 'family meal'),
	('Ratatouille', 'vegetarian'),
	('Ratatouille', 'healthy'),
	('Ratatouille', 'classic'),
	('Peking Duck', 'classic'),
	('Peking Duck', 'dinner party'),
	('Peking Duck', 'family meal'),
	('Palak Paneer', 'vegetarian'),
	('Palak Paneer', 'spicy'),
	('Palak Paneer', 'comfort food'),
	('Chiles en Nogada', 'spicy'),
	('Chiles en Nogada', 'classic'),
	('Chiles en Nogada', 'dinner party'),
	('Sashimi', 'cool dish'),
	('Sashimi', 'seafood'),
	('Sashimi', 'healthy'),
	('Tom Kha Gai', 'spicy'),
	('Tom Kha Gai', 'seafood'),
	('Tom Kha Gai', 'healthy'),
	('Dolmades', 'vegetarian'),
	('Dolmades', 'healthy'),
	('Dolmades', 'cool dish'),
	('Fattoush', 'vegetarian'),
	('Fattoush', 'healthy'),
	('Fattoush', 'cool dish'),
	('Carbonnade Flamande', 'classic'),
	('Carbonnade Flamande', 'dinner party'),
	('Carbonnade Flamande', 'comfort food'),
	('Tiramisu', 'classic'),
	('Tiramisu', 'dessert'),
	('Tiramisu', 'dinner party'),
	('Crepes Suzette', 'classic'),
	('Crepes Suzette', 'dessert'),
	('Crepes Suzette', 'brunch'),
	('Kung Pao Shrimp', 'spicy'),
	('Kung Pao Shrimp', 'quick-lunch'),
	('Kung Pao Shrimp', 'seafood'),
	('Butter Chicken', 'spicy'),
	('Butter Chicken', 'classic'),
	('Butter Chicken', 'comfort food'),
	('Enchiladas', 'spicy'),
	('Enchiladas', 'quick-lunch'),
	('Enchiladas', 'family meal'),
	('Tempura Vegetables', 'vegetarian'),
	('Tempura Vegetables', 'quick-lunch'),
	('Tempura Vegetables', 'family meal'),
	('Thai Green Curry', 'spicy'),
	('Thai Green Curry', 'quick-lunch'),
	('Thai Green Curry', 'classic'),
	('Spanakopita', 'vegetarian'),
	('Spanakopita', 'brunch'),
	('Spanakopita', 'classic'),
	('Tabbouleh', 'vegetarian'),
	('Tabbouleh', 'healthy'),
	('Tabbouleh', 'cool dish'),
	('Osso Buco', 'classic'),
	('Osso Buco', 'dinner party'),
	('Osso Buco', 'family meal'),
	('Hot and Sour Soup', 'spicy'),
	('Hot and Sour Soup', 'quick-lunch'),
	('Hot and Sour Soup', 'healthy'),
	('Paneer Tikka', 'vegetarian'),
	('Paneer Tikka', 'spicy'),
	('Paneer Tikka', 'quick-lunch'),
	('Chilaquiles', 'spicy'),
	('Chilaquiles', 'quick-lunch'),
	('Chilaquiles', 'brunch'),
	('Miso Soup', 'vegetarian'),
	('Miso Soup', 'quick-lunch'),
	('Miso Soup', 'healthy'),
	('Ceviche', 'cool dish'),
	('Ceviche', 'seafood'),
	('Ceviche', 'healthy'),
	('Eggplant Parmesan', 'vegetarian'),
	('Eggplant Parmesan', 'classic'),
	('Eggplant Parmesan', 'comfort food'),
	('Vietnamese Spring Rolls', 'cool dish'),
	('Vietnamese Spring Rolls', 'seafood'),
	('Vietnamese Spring Rolls', 'healthy'),
	('Chicken Korma', 'spicy'),
	('Chicken Korma', 'comfort food'),
	('Chicken Korma', 'classic'),
	('Caprese Pizza', 'vegetarian'),
	('Caprese Pizza', 'brunch'),
	('Caprese Pizza', 'classic'),
	('Gyoza', 'quick-lunch'),
	('Gyoza', 'family meal'),
	('Gyoza', 'classic'),
	('Pasta Primavera', 'vegetarian'),
	('Pasta Primavera', 'quick-lunch'),
	('Pasta Primavera', 'classic'),
	('Tofu Curry', 'vegetarian'),
	('Tofu Curry', 'spicy'),
	('Tofu Curry', 'healthy'),
	('Pho', 'comfort food'),
	('Pho', 'spicy'),
	('Banh Mi', 'quick-lunch'),
	('Banh Mi', 'comfort food'),
	('Spring Rolls', 'cool dish'),
	('Spring Rolls', 'vegetarian'),
	('Beef Stew', 'comfort food'),
	('Beef Stew', 'classic'),
	('Beef Stew', 'family meal'),
	('Apple Pie', 'dessert'),
	('Apple Pie', 'classic'),
	('BBQ Ribs', 'comfort food'),
	('BBQ Ribs', 'family meal'),
	('Feijoada', 'comfort food'),
	('Feijoada', 'spicy'),
	('Pão de Queijo', 'comfort food'),
	('Pão de Queijo', 'gluten-free'),
	('Pão de Queijo', 'easy'),
	('Brigadeiro', 'dessert'),
	('Brigadeiro', 'classic'),
	('Kimchi', 'comfort food'),
	('Kimchi', 'spicy'),
	('Bibimbap', 'comfort food'),
	('Bibimbap', 'spicy'),
	('Bulgogi', 'comfort food'),
	('Bulgogi', 'spicy'),
	('Doro Wat', 'comfort food'),
	('Doro Wat', 'spicy'),
	('Injera', 'comfort food'),
	('Kitfo', 'comfort food'),
	('Lamb Tagine', 'comfort food'),
	('Lamb Tagine', 'family meal'),
	('Shakshuka', 'brunch'),
	('Shakshuka', 'healthy'),
	('Tortilla Española', 'quick-lunch'),
	('Tortilla Española', 'comfort food');

-- Dumping structure for πίνακας cooking.themes
CREATE TABLE IF NOT EXISTS `themes` (
  `theme_name` varchar(30) NOT NULL,
  `theme_desc` varchar(50) NOT NULL,
  PRIMARY KEY (`theme_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.themes: ~42 rows (approximately)
INSERT INTO `themes` (`theme_name`, `theme_desc`) VALUES
	('African Cuisine', 'Flavors inspired by African culinary traditions'),
	('Asian Comfort', 'Comfort and warmth from Asian cuisine'),
	('Asian Cuisine', 'Delicious flavors from across Asia'),
	('Belgian Cuisine', 'Delicious offerings from Belgian cooking'),
	('Brunch Bonanza', 'Ideal for leisurely weekend brunches'),
	('Chinese Cuisine', 'Diverse and flavorful cuisine of China'),
	('Classic', 'Timeless and beloved classic recipes'),
	('Classic Favorites', 'Timeless dishes loved by many'),
	('Comfort Food', 'Evokes warmth and satisfaction'),
	('Comfort Food Classics', 'Beloved classic comfort food recipes'),
	('Cool Summer Treats', 'Refreshing dishes perfect for summer'),
	('Dessert Delights', 'Satisfies any sweet tooth'),
	('Dinner Party Essentials', 'Essential dishes for any dinner party'),
	('Dinner Party Favorites', 'Perfect for entertaining dinner parties'),
	('Family Favorites', 'Loved by the whole family'),
	('French Cuisine', 'Sophistication and elegance of French cooking'),
	('Gluten-Free', 'Recipes free of gluten'),
	('Greek Cuisine', 'Traditional and flavorful Greek recipes'),
	('Healthy Choices', 'Promotes health and wellness'),
	('Healthy Dips', 'Nourishing and delicious dip options'),
	('Healthy Eating', 'Promotes a balanced diet'),
	('Indian Cuisine', 'Inspired by Indian culinary traditions'),
	('Italian Cuisine', 'Diverse and delicious flavors of Italy'),
	('Japanese Cuisine', 'Delicate flavors of Japanese cooking'),
	('Korean Cuisine', 'Authentic Korean flavors and dishes'),
	('Latin American Cuisine', 'Vibrant and diverse culinary traditions'),
	('Mediterranean Delights', 'Captures the essence of Mediterranean cuisine'),
	('Mexican Cuisine', 'Vibrant flavors of Mexico'),
	('Middle Eastern Flavors', 'Bold and aromatic flavors of the Middle East'),
	('Quick Lunch Ideas', 'Perfect for quick and delicious lunches'),
	('Seafood Extravaganza', 'Abundance of delicious seafood'),
	('Seafood Lovers', 'For those who adore seafood delights'),
	('Spanish Cuisine', 'Rich culinary heritage of Spain'),
	('Spicy Delights', 'Packs a punch of heat and flavor'),
	('Spicy Favorites', 'Dishes packed with spicy goodness'),
	('Spicy Sensations', 'Exciting and flavorful spicy dishes'),
	('Street Food', 'Inspired by popular street food'),
	('Thai Cuisine', 'Authentic and flavorful Thai dishes'),
	('Vegetarian Classics', 'Time-honored vegetarian recipes'),
	('Vegetarian Delights', 'Delectable dishes for vegetarians to enjoy'),
	('Vegetarian Options', 'Focuses on plant-based ingredients'),
	('Vietnamese Cuisine', 'Delicious flavors from Vietnamese cooking');

-- Dumping structure for πίνακας cooking.themes_recipes
CREATE TABLE IF NOT EXISTS `themes_recipes` (
  `recipe_name` varchar(50) NOT NULL,
  `theme_name` varchar(30) NOT NULL,
  PRIMARY KEY (`recipe_name`,`theme_name`),
  KEY `themes_fk_6` (`theme_name`),
  CONSTRAINT `recipes_fk_7` FOREIGN KEY (`recipe_name`) REFERENCES `recipes` (`recipe_name`),
  CONSTRAINT `themes_fk_6` FOREIGN KEY (`theme_name`) REFERENCES `themes` (`theme_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- Dumping data for table cooking.themes_recipes: ~211 rows (approximately)
INSERT INTO `themes_recipes` (`recipe_name`, `theme_name`) VALUES
	('Doro Wat', 'African Cuisine'),
	('Injera', 'African Cuisine'),
	('Kitfo', 'African Cuisine'),
	('Banh Mi', 'Asian Comfort'),
	('Bibimbap', 'Asian Comfort'),
	('Bulgogi', 'Asian Comfort'),
	('Pho', 'Asian Comfort'),
	('Spring Rolls', 'Asian Comfort'),
	('Tom Yum Soup', 'Asian Comfort'),
	('Tofu Curry', 'Asian Cuisine'),
	('Carbonnade Flamande', 'Belgian Cuisine'),
	('Caprese Pizza', 'Brunch Bonanza'),
	('Chilaquiles', 'Brunch Bonanza'),
	('Crepes Suzette', 'Brunch Bonanza'),
	('Guacamole', 'Brunch Bonanza'),
	('Shakshuka', 'Brunch Bonanza'),
	('Spanakopita', 'Brunch Bonanza'),
	('Hot and Sour Soup', 'Chinese Cuisine'),
	('Kung Pao Chicken', 'Chinese Cuisine'),
	('Kung Pao Shrimp', 'Chinese Cuisine'),
	('Mapo Tofu', 'Chinese Cuisine'),
	('Peking Duck', 'Chinese Cuisine'),
	('BBQ Ribs', 'Classic'),
	('Beef Stew', 'Classic'),
	('Pad Thai', 'Classic Favorites'),
	('Apple Pie', 'Comfort Food'),
	('BBQ Ribs', 'Comfort Food'),
	('Beef Stew', 'Comfort Food'),
	('Brigadeiro', 'Comfort Food'),
	('Chicken Tikka Masala', 'Comfort Food'),
	('Doro Wat', 'Comfort Food'),
	('Feijoada', 'Comfort Food'),
	('Injera', 'Comfort Food'),
	('Kitfo', 'Comfort Food'),
	('Pão de Queijo', 'Comfort Food'),
	('Beef Bourguignon', 'Comfort Food Classics'),
	('Butter Chicken', 'Comfort Food Classics'),
	('Carbonnade Flamande', 'Comfort Food Classics'),
	('Chicken Korma', 'Comfort Food Classics'),
	('Coq au Vin', 'Comfort Food Classics'),
	('Eggplant Parmesan', 'Comfort Food Classics'),
	('Lamb Tagine', 'Comfort Food Classics'),
	('Lasagna', 'Comfort Food Classics'),
	('Moussaka', 'Comfort Food Classics'),
	('Osso Buco', 'Comfort Food Classics'),
	('Palak Paneer', 'Comfort Food Classics'),
	('Spaghetti Carbonara', 'Comfort Food Classics'),
	('Tortilla Española', 'Comfort Food Classics'),
	('Gazpacho', 'Cool Summer Treats'),
	('Apple Pie', 'Dessert Delights'),
	('Brigadeiro', 'Dessert Delights'),
	('Crepes Suzette', 'Dessert Delights'),
	('Tiramisu', 'Dessert Delights'),
	('Beef Bourguignon', 'Dinner Party Essentials'),
	('Carbonnade Flamande', 'Dinner Party Essentials'),
	('Chiles en Nogada', 'Dinner Party Essentials'),
	('Coq au Vin', 'Dinner Party Essentials'),
	('Osso Buco', 'Dinner Party Essentials'),
	('Peking Duck', 'Dinner Party Essentials'),
	('Tiramisu', 'Dinner Party Essentials'),
	('Paella', 'Dinner Party Favorites'),
	('Apple Pie', 'Family Favorites'),
	('BBQ Ribs', 'Family Favorites'),
	('Beef Stew', 'Family Favorites'),
	('Bibimbap', 'Family Favorites'),
	('Brigadeiro', 'Family Favorites'),
	('Bulgogi', 'Family Favorites'),
	('Chicken Biryani', 'Family Favorites'),
	('Doro Wat', 'Family Favorites'),
	('Enchiladas', 'Family Favorites'),
	('Feijoada', 'Family Favorites'),
	('Gyoza', 'Family Favorites'),
	('Injera', 'Family Favorites'),
	('Kitfo', 'Family Favorites'),
	('Lamb Tagine', 'Family Favorites'),
	('Lasagna', 'Family Favorites'),
	('Margherita Pizza', 'Family Favorites'),
	('Moussaka', 'Family Favorites'),
	('Pão de Queijo', 'Family Favorites'),
	('Pasta Primavera', 'Family Favorites'),
	('Peking Duck', 'Family Favorites'),
	('Spaghetti Carbonara', 'Family Favorites'),
	('Tacos al Pastor', 'Family Favorites'),
	('Tortilla Española', 'Family Favorites'),
	('Beef Bourguignon', 'French Cuisine'),
	('Coq au Vin', 'French Cuisine'),
	('Crepes Suzette', 'French Cuisine'),
	('Ratatouille', 'French Cuisine'),
	('Pão de Queijo', 'Gluten-Free'),
	('Moussaka', 'Greek Cuisine'),
	('Spanakopita', 'Greek Cuisine'),
	('Bibimbap', 'Healthy Choices'),
	('Ceviche', 'Healthy Choices'),
	('Dolmades', 'Healthy Choices'),
	('Fattoush', 'Healthy Choices'),
	('Pho', 'Healthy Choices'),
	('Ratatouille', 'Healthy Choices'),
	('Sashimi', 'Healthy Choices'),
	('Shakshuka', 'Healthy Choices'),
	('Spring Rolls', 'Healthy Choices'),
	('Sushi Rolls', 'Healthy Choices'),
	('Tabbouleh', 'Healthy Choices'),
	('Tofu Curry', 'Healthy Choices'),
	('Tom Kha Gai', 'Healthy Choices'),
	('Tom Yum Soup', 'Healthy Choices'),
	('Vietnamese Spring Rolls', 'Healthy Choices'),
	('Guacamole', 'Healthy Dips'),
	('Hummus', 'Healthy Dips'),
	('Greek Salad', 'Healthy Eating'),
	('Butter Chicken', 'Indian Cuisine'),
	('Chicken Biryani', 'Indian Cuisine'),
	('Chicken Korma', 'Indian Cuisine'),
	('Chicken Tikka Masala', 'Indian Cuisine'),
	('Palak Paneer', 'Indian Cuisine'),
	('Paneer Tikka', 'Indian Cuisine'),
	('Caprese Pizza', 'Italian Cuisine'),
	('Eggplant Parmesan', 'Italian Cuisine'),
	('Lasagna', 'Italian Cuisine'),
	('Margherita Pizza', 'Italian Cuisine'),
	('Osso Buco', 'Italian Cuisine'),
	('Pasta Primavera', 'Italian Cuisine'),
	('Spaghetti Carbonara', 'Italian Cuisine'),
	('Tiramisu', 'Italian Cuisine'),
	('Gyoza', 'Japanese Cuisine'),
	('Miso Soup', 'Japanese Cuisine'),
	('Sashimi', 'Japanese Cuisine'),
	('Sushi Rolls', 'Japanese Cuisine'),
	('Tempura', 'Japanese Cuisine'),
	('Tempura Vegetables', 'Japanese Cuisine'),
	('Kimchi', 'Korean Cuisine'),
	('Ceviche', 'Latin American Cuisine'),
	('Feijoada', 'Latin American Cuisine'),
	('Dolmades', 'Mediterranean Delights'),
	('Fattoush', 'Mediterranean Delights'),
	('Greek Salad', 'Mediterranean Delights'),
	('Tabbouleh', 'Mediterranean Delights'),
	('Chilaquiles', 'Mexican Cuisine'),
	('Chiles en Nogada', 'Mexican Cuisine'),
	('Enchiladas', 'Mexican Cuisine'),
	('Guacamole', 'Mexican Cuisine'),
	('Tacos al Pastor', 'Mexican Cuisine'),
	('Falafel', 'Middle Eastern Flavors'),
	('Hummus', 'Middle Eastern Flavors'),
	('Lamb Tagine', 'Middle Eastern Flavors'),
	('Shakshuka', 'Middle Eastern Flavors'),
	('Banh Mi', 'Quick Lunch Ideas'),
	('Bulgogi', 'Quick Lunch Ideas'),
	('Falafel', 'Quick Lunch Ideas'),
	('Gyoza', 'Quick Lunch Ideas'),
	('Hot and Sour Soup', 'Quick Lunch Ideas'),
	('Kung Pao Chicken', 'Quick Lunch Ideas'),
	('Miso Soup', 'Quick Lunch Ideas'),
	('Paneer Tikka', 'Quick Lunch Ideas'),
	('Pasta Primavera', 'Quick Lunch Ideas'),
	('Tempura', 'Quick Lunch Ideas'),
	('Tempura Vegetables', 'Quick Lunch Ideas'),
	('Thai Green Curry', 'Quick Lunch Ideas'),
	('Sushi Rolls', 'Seafood Extravaganza'),
	('Ceviche', 'Seafood Lovers'),
	('Kung Pao Shrimp', 'Seafood Lovers'),
	('Paella', 'Seafood Lovers'),
	('Sashimi', 'Seafood Lovers'),
	('Tempura', 'Seafood Lovers'),
	('Vietnamese Spring Rolls', 'Seafood Lovers'),
	('Gazpacho', 'Spanish Cuisine'),
	('Paella', 'Spanish Cuisine'),
	('Tortilla Española', 'Spanish Cuisine'),
	('Chicken Tikka Masala', 'Spicy Delights'),
	('Kimchi', 'Spicy Delights'),
	('Kung Pao Chicken', 'Spicy Favorites'),
	('Mapo Tofu', 'Spicy Favorites'),
	('Butter Chicken', 'Spicy Sensations'),
	('Chicken Biryani', 'Spicy Sensations'),
	('Chicken Korma', 'Spicy Sensations'),
	('Chilaquiles', 'Spicy Sensations'),
	('Chiles en Nogada', 'Spicy Sensations'),
	('Enchiladas', 'Spicy Sensations'),
	('Hot and Sour Soup', 'Spicy Sensations'),
	('Kung Pao Shrimp', 'Spicy Sensations'),
	('Pad Thai', 'Spicy Sensations'),
	('Palak Paneer', 'Spicy Sensations'),
	('Paneer Tikka', 'Spicy Sensations'),
	('Thai Green Curry', 'Spicy Sensations'),
	('Tofu Curry', 'Spicy Sensations'),
	('Tom Kha Gai', 'Spicy Sensations'),
	('Tom Yum Soup', 'Spicy Sensations'),
	('Banh Mi', 'Street Food'),
	('Kimchi', 'Street Food'),
	('Pho', 'Street Food'),
	('Spring Rolls', 'Street Food'),
	('Tacos al Pastor', 'Street Food'),
	('Pad Thai', 'Thai Cuisine'),
	('Thai Green Curry', 'Thai Cuisine'),
	('Tom Kha Gai', 'Thai Cuisine'),
	('Dolmades', 'Vegetarian Classics'),
	('Falafel', 'Vegetarian Classics'),
	('Fattoush', 'Vegetarian Classics'),
	('Hummus', 'Vegetarian Classics'),
	('Tabbouleh', 'Vegetarian Classics'),
	('Caprese Pizza', 'Vegetarian Delights'),
	('Eggplant Parmesan', 'Vegetarian Delights'),
	('Gazpacho', 'Vegetarian Delights'),
	('Margherita Pizza', 'Vegetarian Delights'),
	('Miso Soup', 'Vegetarian Delights'),
	('Pasta Primavera', 'Vegetarian Delights'),
	('Ratatouille', 'Vegetarian Delights'),
	('Spanakopita', 'Vegetarian Delights'),
	('Tempura Vegetables', 'Vegetarian Delights'),
	('Greek Salad', 'Vegetarian Options'),
	('Mapo Tofu', 'Vegetarian Options'),
	('Vietnamese Spring Rolls', 'Vietnamese Cuisine');

-- Dumping structure for trigger cooking.calculate_calories
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER calculate_calories AFTER INSERT ON recipes_ingredients
FOR EACH ROW
BEGIN
    
    DECLARE total_calories INT;

    
    IF NEW.quantity_gr IS NOT NULL THEN
        
        SELECT SUM(ingredients.calories_per_gram * recipes_ingredients.quantity_gr) 
        INTO total_calories
        FROM ingredients
        INNER JOIN recipes_ingredients ON ingredients.ingredient_name = recipes_ingredients.ingredient_name
        WHERE recipes_ingredients.recipe_name = NEW.recipe_name;

        
        UPDATE nutrition_information
        SET calories = total_calories
        WHERE recipe_name = NEW.recipe_name;
    END IF;
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
